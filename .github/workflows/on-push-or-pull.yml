name: on-pull-request-or-push

env:
#  NODE_VERSION: 14.16.1
  CACHE_PATHS: |
    ~/.npm
    node_modules

  GH_NAME: ${{ secrets.GH_NAME }}
  GH_EMAIL: ${{ secrets.GH_EMAIL }}

  NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
  NPM_EMAIL: ${{ secrets.GH_EMAIL }}
  AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  TRAVIS_BRANCH: ${{ github.ref }}
  TRAVIS_REPO_SLUG: ${{ github.repository }}
  TRAVIS_BUILD_NUMBER: ${{ github.run_number }}

on:
  pull_request:
  push:
    branches:
      - main
      - tmp_branch_for_automated_release_do_not_use
      - hotfix_tmp_branch_for_automated_release_do_not_use

jobs:
  one_run:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ secrets.GHACTIONS }}

  commit_lint:
    runs-on: ubuntu-latest
    name: Lint commit message
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v3

  # install dependencies
  install:
    runs-on: ubuntu-latest
    name: Dependency installation
    needs: one_run
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: node_modules-${{ hashFiles('**/package.json') }}
      - name: Install dependencies
        run: npm i

  lint:
    runs-on: ubuntu-latest
    name: Lint
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: node_modules-${{ hashFiles('**/package.json') }}
      - run: npm run lint

  build:
    runs-on: ubuntu-latest
    name: Build and bundle size check
    needs:
      - install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: node_modules-${{ hashFiles('**/package.json') }}
      - run: npm run build:prod
      - run: npm run size

  publishRc:
    runs-on: ubuntu-latest
    name: Publish RC
    if: ${{ github.ref_name == 'main' }}
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
            token: ${{ secrets.GHACTIONS }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: node_modules-${{ hashFiles('**/package.json') }}
      - run: ./ci-scripts/setup-npm.sh
        shell: bash
      - run: |
          git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
          git fetch
      - run: ./ci-scripts/publish-rc.sh
        env:
            GH_TOKEN: ${{ secrets.GHACTIONS }}
        shell: bash

  release:
    runs-on: ubuntu-latest
    name: Release
    if: ${{ github.ref_name == 'tmp_branch_for_automated_release_do_not_use' }}
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          token: ${{ secrets.GHACTIONS }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: node_modules-${{ hashFiles('**/package.json') }}
      - run: ./ci-scripts/setup-npm.sh
        shell: bash
      - run: |
          git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
          git fetch
      - run: ./ci-scripts/publish.sh
        env:
            GH_TOKEN: ${{ secrets.GHACTIONS }}
        shell: bash

  hotfixRelease:
    runs-on: ubuntu-latest
    name: Hotfix release
    if: ${{ github.ref_name == 'hotfix_tmp_branch_for_automated_release_do_not_use' }}
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: hotfix_tmp_branch_for_automated_release_do_not_use
      - uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: node_modules-${{ hashFiles('**/package.json') }}
      - run: ./ci-scripts/setup-npm.sh
        shell: bash
      - run: |
          git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
          git fetch
      - run: ./ci-scripts/hotfix-publish.sh
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GHACTIONS }}
          TRAVIS_BUILD_STAGE_NAME: Hotfix-release
