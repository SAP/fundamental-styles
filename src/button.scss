@import "./settings";
@import "./mixins";
@import "./functions";

@mixin isDisabled() {
  opacity: 0.4;
  cursor: not-allowed;

  &:focus {
    outline: none;
  }
}

@mixin focus() {
  outline: var(--sapContent_FocusWidth) dotted var(--sapContent_FocusColor);
  outline-offset: -0.1875rem;
}

@mixin standard() {
  color: var(--sapButton_TextColor);
  border-color: var(--sapButton_BorderColor);
  background-color: var(--sapButton_Background);
}

@mixin positive() {
  color: var(--sapButton_Accept_TextColor);
  border-color: var(--sapButton_Accept_BorderColor);
  background-color: var(--sapButton_Accept_Background);
}

@mixin negative() {
  color: var(--sapButton_Reject_TextColor);
  border-color: var(--sapButton_Reject_BorderColor);
  background-color: var(--sapButton_Reject_Background);
}

@mixin isStandard() {
  @include standard();

  @include fd-hover() {
    color: var(--sapButton_Hover_TextColor);
    border-color: var(--sapButton_Hover_BorderColor);
    background-color: var(--sapButton_Hover_Background);
  }

  @include fd-disabled() {
    @include isDisabled();
    @include standard();

    &:focus {
      outline: none;
    }

    box-shadow: none;
  }

  @include fd-active-pressed-selected() {
    color: var(--sapButton_Selected_TextColor);
    background-color: var(--sapButton_Active_Background);
    border-color: var(--sapButton_BorderColor);

    &:focus {
      outline-color: var(--sapContent_ContrastFocusColor);
    }

    @include fd-disabled() {
      @include isDisabled();
      @include standard();

      &:focus {
        outline: none;
      }

      box-shadow: none;
    }
  }

  &:focus {
    @include focus();
  }
}

@mixin isNegative() {
  @include negative();

  @include fd-hover() {
    color: var(--sapButton_Reject_Hover_TextColor);
    border-color: var(--sapButton_Reject_Hover_BorderColor);
    background-color: var(--sapButton_Reject_Hover_Background);
  }

  @include fd-disabled() {
    @include isDisabled();
    @include negative();

    box-shadow: none;
  }

  @include fd-active-pressed-selected() {
    color: var(--sapButton_Selected_TextColor);
    background-color: var(--sapButton_Reject_Active_Background);
    border-color: var(--sapButton_Reject_Active_BorderColor);

    &:focus {
      outline-color: var(--sapContent_ContrastFocusColor);
    }

    @include fd-disabled() {
      @include isDisabled();
      @include negative();

      box-shadow: none;
    }
  }

  &:focus {
    @include focus();
  }
}

@mixin isPositive() {
  @include positive();

  @include fd-hover() {
    color: var(--sapButton_Accept_Hover_TextColor);
    border-color: var(--sapButton_Accept_Hover_BorderColor);
    background-color: var(--sapButton_Accept_Hover_Background);
  }

  @include fd-disabled() {
    @include isDisabled();
    @include positive();

    &:focus {
      outline: none;
    }

    box-shadow: none;
  }

  @include fd-active-pressed-selected() {
    color: var(--sapButton_Selected_TextColor);
    background-color: var(--sapButton_Accept_Active_Background);
    border-color: var(--sapButton_Accept_Active_BorderColor);

    &:focus {
      outline-color: var(--sapContent_ContrastFocusColor);
    }

    @include fd-disabled() {
      @include isDisabled();
      @include positive();

      box-shadow: none;

      &:focus {
        outline: none;
      }
    }
  }

  &:focus {
    @include focus();
  }
}

@mixin isLight() {
  border-color: var(--sapButton_Lite_BorderColor);
  background-color: var(--sapButton_Lite_Background);
}

@mixin isEmphasized() {
  color: var(--sapButton_Emphasized_TextColor);
  border-color: var(--sapButton_Emphasized_BorderColor);
  background-color: var(--sapButton_Emphasized_Background);
}

/*!
.fd-button+( (--compact), (--emphasized, --light), (--standard, --positive, --medium, --negative))+( (.is-disabled | [aria-disabled=true]) | (.is-selected | [aria-selected=true] | (.is-pressed | [aria-pressed=true]))
*/

$block: #{$fd-namespace}-button;

.#{$block},
a.#{$block} {
  @include isStandard();
  // spacing
  $fd-button-padding-x: fd-space("xs") !default;
  // anim
  $fd-button-transition-params: $fd-animation--speed ease-in !default;

  // BASE
  // set all reset and baseline block styles
  @at-root {
    .#{$block},
    [class*="#{$block}--"],
    a[class*="#{$block}--"] {
      @include fd-reset();
      @include fd-button-reset();
      @include isStandard();
      // set metrics
      @include fd-var-size("height", $fd-forms-height, --fd-forms-height);
      @include fd-var-size("max-height", $fd-forms-height, --fd-forms-height);
      @include fd-var-size("min-width", $fd-forms-height, --fd-forms-height);
      @include fd-type("0");
      @include fd-icon-size("m", "before");
      @include fd-icon-size("m", "after");
      @include fd-var-size("line-height", $fd-button-line-height, --fd-button-line-height);

      padding-left: $fd-button-padding-x;
      padding-right: $fd-button-padding-x;
      text-align: center;

      // look
      border-style: solid;
      border-width: var(--sapButton_BorderWidth);

      // animation
      transition: all $fd-button-transition-params;

      // placements
      &::before {
        margin-right: fd-space(2);
        vertical-align: text-bottom;
      }

      @at-root {
        [dir="rtl"] &,
        &[dir="rtl"] {
          &::before {
            margin-right: 0;
            margin-left: fd-space(2);
          }
        }
      }

      &::after {
        margin-left: fd-space(2);
        vertical-align: middle;
      }

      @at-root {
        [dir="rtl"] &,
        &[dir="rtl"] {
          &::after {
            margin-left: 0;
            margin-right: fd-space(2);
          }
        }
      }

      &:empty {
        padding: 0;

        &::before,
        &::after {
          margin-right: 0;
          margin-left: 0;
        }
      }
    }
  }

  &--half {
    --fd-forms-height-half: #{$fd-forms-height/2};

    @include fd-var-size("height", $fd-forms-height/2, --fd-forms-height-half);
    @include fd-var-size("max-height", $fd-forms-height/2, --fd-forms-height-half);

    line-height: 1;

    &.#{$block}--compact {
      --fd-forms-height-half: #{$fd-forms-height--compact/2};

      @include fd-var-size("height", $fd-forms-height--compact/2, --fd-forms-height-half);
      @include fd-var-size("max-height", $fd-forms-height--compact/2, --fd-forms-height-half);

      line-height: 1;
    }
  }
  // compact sizes (see `core/root` for css vars rules)
  &--compact {
    // set metrics
    @include fd-var-size("height", $fd-forms-height, --fd-forms-height-compact);
    @include fd-var-size("max-height", $fd-forms-height, --fd-forms-height-compact);
    @include fd-var-size("min-width", $fd-forms-height, --fd-forms-height-compact);
    @include fd-var-size("line-height", $fd-button-line-height--compact, --fd-button-line-height-compact);

    @at-root {
      .fd-for-touch & {
        @include fd-var-size("height", $fd-forms-height, --fd-forms-height);
        @include fd-var-size("min-width", $fd-forms-height, --fd-forms-height);
        @include fd-var-size("line-height", $fd-button-line-height, --fd-button-line-height);
      }

      .fd-for-compact & {
        @include fd-var-size("height", $fd-forms-height--compact, --fd-forms-height-compact);
        @include fd-var-size("min-width", $fd-forms-height--compact, --fd-forms-height-compact);
        @include fd-var-size("line-height", $fd-button-line-height--compact, --fd-button-line-height-compact);
      }
    }

    @include fd-screen(m) {
      @include fd-var-size("height", $fd-forms-height--compact, --fd-forms-height-compact);
      @include fd-var-size("min-width", $fd-forms-height--compact, --fd-forms-height-compact);
      @include fd-var-size("line-height", $fd-button-line-height--compact, --fd-button-line-height-compact);
    }
  }

  &--standard {
    @include isStandard();
  }

  &--positive {
    @include isPositive();
  }

  &--negative {
    @include isNegative();
  }

  &--menu {
    @include fd-icon("navigation-down-arrow", "s", "after");

    &:empty {
      &::before {
        margin-right: 0;
        margin-left: fd-space(2);
      }

      &::after {
        margin-right: fd-space(2);
        margin-left: fd-space(2);
      }
    }

    @at-root {
      [dir="rtl"] &,
      &[dir="rtl"] {
        &:empty {
          &::before {
            margin-right: fd-space(2);
            margin-left: 0;
          }
        }
      }
    }
  }

  // BUTTON emphasis variations
  // .fd-button--emphasized
  &--emphasized {
    font-weight: fd-font-weight("bold");

    &:focus {
      @include focus();

      outline-color: var(--sapContent_ContrastFocusColor);
    }

    @include isEmphasized();

    @include fd-active-pressed-selected() {
      background-color: var(--sapButton_Emphasized_Active_Background);
      border-color: var(--sapButton_Emphasized_Active_BorderColor);

      @include fd-disabled() {
        @include isEmphasized();
        @include isDisabled();
      }
    }

    @include fd-hover() {
      color: var(--sapButton_Emphasized_Hover_TextColor);
      background-color: var(--sapButton_Emphasized_Hover_Background);

      @include fd-active-pressed-selected() {
        background-color: var(--sapButton_Emphasized_Active_Background);
        border-color: var(--sapButton_Emphasized_Active_BorderColor);

        @include fd-disabled() {
          @include isEmphasized();
          @include isDisabled();
        }
      }
    }

    @include fd-disabled() {
      @include isEmphasized();
      @include isDisabled();
    }
  }

  // .fd-button--light
  &--light {
    @include isLight();

    color: var(--sapButton_Lite_TextColor);

    &:focus {
      @include focus();
    }

    @include fd-hover() {
      background-color: var(--sapButton_Lite_Hover_Background);
      border-color: var(--sapButton_Lite_Hover_BorderColor);
      color: var(--sapButton_Lite_Hover_TextColor);
    }

    @include fd-disabled() {
      @include isLight();
      @include isDisabled();

      &:focus {
        @include isLight();
      }

      box-shadow: none;
    }

    @include fd-active-pressed-selected() {
      color: var(--sapButton_Selected_TextColor);
      border-color: var(--sapButton_Lite_Active_BorderColor);
      background-color: var(--sapButton_Lite_Active_Background);

      @include fd-disabled() {
        @include isDisabled();
        @include isLight();

        box-shadow: none;
      }
    }

    &.#{$block}--standard {
      @include isStandard();
      @include isLight();

      @include fd-disabled() {
        @include isLight();
        @include isDisabled();

        box-shadow: none;
      }
    }

    &.#{$block}--negative {
      @include isNegative();
      @include isLight();

      @include fd-disabled() {
        @include isLight();
        @include isDisabled();
      }
    }

    &.#{$block}--positive {
      @include isPositive();
      @include isLight();

      @include fd-disabled() {
        @include isLight();
        @include isDisabled();
      }
    }
  }
}
