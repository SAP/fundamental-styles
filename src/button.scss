@import './new-settings';
@import './mixins';
@import './mixins/button/button-helper';
@import './mixins/button/standard';
@import './mixins/button/negative';
@import './mixins/button/attention';
@import './mixins/button/ghost';
@import './mixins/button/positive';
@import './mixins/button/emphasized';
@import './mixins/button/button-transparent';

$fd-button-border-width: var(--sapButton_BorderWidth);
$fd-button-font-size: var(--sapFontMediumSize);
$fd-button-icon-font-size: 1rem;

$fd-button-clickable-height: 2.75rem;
$fd-button-height: 2.25rem;
$fd-button-touchable-area: ($fd-button-clickable-height - $fd-button-height) / 2;
$fd-button-padding-x: calc(0.625rem - #{$fd-button-border-width});
$fd-button-min-width: 2.25rem;
$fd-button-icon-margin: 0.375rem;

$fd-button-compact-clickable-height: 2rem;
$fd-button-compact-height: 1.625rem;
$fd-button-compact-touchable-area: ($fd-button-compact-clickable-height - $fd-button-compact-height) / 2;
$fd-button-compact-padding-x: calc(0.5rem - #{$fd-button-border-width});
$fd-button-compact-min-width: 2rem;
$fd-button-compact-line-height: calc(#{$fd-button-compact-height} - 2 * #{$fd-button-border-width});

$fd-menu-button-max-width: 12rem;
$fd-menu-button-icon-size: 0.75rem;
$fd-menu-button-icon-position-top: 0.6rem;
$fd-menu-button-icon-position-top-compact: 0.235rem;

// anim
$fd-button-transition-params: $fd-animation-speed ease-in !default;

$block: #{$fd-namespace}-button;

@mixin isDisabled() {
  opacity: var(--sapContent_DisabledOpacity);
  cursor: not-allowed;

  &:focus {
    @include buttonFocus();
  }
}

@mixin iconSize($size) {
  &::before,
  &::after {
    width: $size;
    height: $size;
    font-size: $size;
    line-height: $size;
    font-family: 'SAP-icons';
  }
}

@mixin buttonBase() {
  height: $fd-button-height;
  max-height: $fd-button-height;
  min-width: $fd-button-min-width;
  overflow: hidden;
  text-overflow: ellipsis;

  @include iconSize($fd-button-icon-font-size);

  padding-left: $fd-button-padding-x;
  padding-right: $fd-button-padding-x;
  text-align: center;

  // look
  border-style: solid;
  border-width: $fd-button-border-width;
}

@mixin buttonReset() {
  @include fd-reset();
  @include fd-button-reset();
  @include buttonBase();
}

@mixin compact() {
  // set metrics
  height: $fd-button-compact-height;
  max-height: $fd-button-compact-height;
  min-width: $fd-button-compact-min-width;
  padding-left: $fd-button-compact-padding-x;
  padding-right: $fd-button-compact-padding-x;
  line-height: $fd-button-compact-line-height;
}

@mixin menu() {
  max-width: $fd-menu-button-max-width;
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin textAlignment() {
  &-left {
    text-align: left;
  }

  &-right {
    text-align: right;
  }

  &-center {
    text-align: center;
  }
}

@mixin half() {
  height: $fd-button-height / 2;
  max-height: $fd-button-height / 2;
  line-height: 1;

  &.#{$block}--compact {
    height: $fd-button-compact-height / 2;
    max-height: $fd-button-compact-height / 2;
    line-height: 1;
  }
}

@mixin buttonContainer() {
  @include standard();

  &.#{$block}--ghost {
    @include ghost();
  }

  &.#{$block}--positive {
    @include positive();
  }

  &.#{$block}--negative {
    @include negative();
  }

  &.#{$block}--attention {
    @include attention();
  }

  &.#{$block}--emphasized {
    font-weight: bold;

    @include emphasized();
  }

  &.#{$block}--transparent {
    @include transparent();
  }
}

@mixin buttonContainerDisabled() {
  @include standardDisabled();

  &.#{$block}--ghost {
    @include ghostDisabled();
  }

  &.#{$block}--positive {
    @include positiveDisabled();
  }

  &.#{$block}--negative {
    @include negativeDisabled();
  }

  &.#{$block}--attention {
    @include attentionDisabled();
  }

  &.#{$block}--emphasized {
    @include emphasizedDisabled();
  }

  &.#{$block}--transparent {
    @include transparentDisabled();
  }
}

@mixin buttonContainerFocus() {
  box-shadow: none;

  @include standardFocus();

  &.#{$block}--ghost {
    @include ghostFocus();
  }

  &.#{$block}--positive {
    @include positiveFocus();
  }

  &.#{$block}--negative {
    @include negativeFocus();
  }

  &.#{$block}--attention {
    @include attentionFocus();
  }

  &.#{$block}--emphasized {
    @include negativeFocus();
  }
}

@mixin buttonContainerPressedFocus() {
  box-shadow: none;

  @include standardPressedFocus();

  &.#{$block}--ghost {
    @include ghostPressedFocus();
  }

  &.#{$block}--positive {
    @include positivePressedFocus();
  }

  &.#{$block}--negative {
    @include negativePressedFocus();
  }

  &.#{$block}--attention {
    @include attentionPressedFocus();
  }

  &.#{$block}--emphasized {
    @include emphasizedPressedFocus();
  }
}

@mixin buttonContainerPressed() {
  @include standardPressed();

  &.#{$block}--ghost {
    @include ghostPressed();
  }

  &.#{$block}--positive {
    @include positivePressed();
  }

  &.#{$block}--negative {
    @include negativePressed();
  }

  &.#{$block}--attention {
    @include attentionPressed();
  }

  &.#{$block}--emphasized {
    @include emphasizedPressed();
  }
}

@mixin buttonContainerHover() {
  @include standardHover();

  &.#{$block}--ghost {
    @include ghostHover();
  }

  &.#{$block}--positive {
    @include positiveHover();
  }

  &.#{$block}--negative {
    @include negativeHover();
  }

  &.#{$block}--attention {
    @include attentionHover();
  }

  &.#{$block}--emphasized {
    @include emphasizedHover();
  }
}

@mixin iconStylesLtr() {
  > i {
    &[class*='sap-icon'] {
      position: relative;
      top: 0.125rem;
      width: $fd-button-icon-font-size;
      height: $fd-button-icon-font-size;
      font-size: $fd-button-icon-font-size;
      line-height: $fd-button-icon-font-size;

      &::before {
        font-style: normal;
        width: $fd-button-icon-font-size;
        height: $fd-button-icon-font-size;
        font-size: $fd-button-icon-font-size;
        line-height: $fd-button-icon-font-size;
      }
    }
    &.#{$block}__icon--left {
      margin-right: $fd-button-icon-margin;
    }

    &.#{$block}__icon--right {
      margin-left: $fd-button-icon-margin;
    }
  }

  &:empty {
    > i {
      &.#{$block}__icon--left {
        margin-right: 0;
      }
    }
  }
}

@mixin iconStylesRtl {
  @include fd-rtl() {
    > i {
      &.#{$block}__icon--left {
        margin-right: 0;
        margin-left: $fd-button-icon-margin;
      }

      &.#{$block}__icon--right {
        margin-left: 0;
        margin-right: $fd-button-icon-margin;
      }
    }

    &:empty {
      > i {
        &.#{$block}__icon--left {
          margin-left: 0;
        }
      }
    }
  }
}

@mixin iconStyles {
  @include iconStylesLtr();
  @include iconStylesRtl();
}

.#{$block} {
  @include buttonReset();
  @include buttonContainer();
  @include iconStyles();

  overflow: visible;
  min-width: $fd-button-min-width;

  &--compact {
    @include compact();
  }

  &--menu {
    @include menu();
  }

  &--text-alignment {
    @include textAlignment();
  }

  &--half {
    @include half();
  }

  &__instructions {
    @include fd-screen-reader-only();
  }

  @include fd-hover() {
    @include buttonContainerHover();
  }

  @include fd-active-pressed-selected() {
    outline: none;

    @include buttonContainerPressed();
  }

  @include fd-focus() {
    @include buttonContainerFocus();

    @include fd-active-pressed-selected() {
      @include buttonContainerPressedFocus();
    }
  }

  @include fd-disabled() {
    @include buttonContainerDisabled();
  }
}
