@import "vars";
@import "states";

// utils
@mixin fd-reset {
  font-size: var(--sapFontSize);
  line-height: $fd-line-height;
  color: var(--sapTextColor);
  font-family: var(--sapFontFamily);
  font-weight: normal;
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  border: 0;

  &::before,
  &::after {
    box-sizing: inherit;
    font-size: inherit;
  }
}

@mixin fd-reset-spacing {
  padding: 0;
  margin: 0;
}

@mixin fd-reset-child-spacing {
  &:nth-child(n + 1) {
    margin: 0;
  }
}

@mixin fd-children {
  &:nth-child(n + 1) {
    @content;
  }
}

@mixin fd-clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin fd-last-child {
  &:last-child {
    margin-bottom: 0;
    margin-right: 0;
    @content;
  }
}

@mixin fd-first-child {
  &:first-child {
    margin-left: 0;
    @content;
  }
}

@mixin fd-screen($size, $dimension: width) {
  @if map-has-key($fd-breakpoints, $size) {
    @media (min-#{$dimension}: map-get($fd-breakpoints, $size)) {
      @content;
    }
  } @else {
    @warn "Unknown `#{$size}` in $fd-breakpoints map";
  }
}

@mixin fd-print() {
  @media print {
    @content;
  }
}
// Taken from https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/library/_triangle.scss
@mixin triangle($size, $color, $direction, $varcolor: null) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);

  height: 0;
  width: 0;
  border-style: solid;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-width: 0 $width $height $width;

      @if $varcolor {
        @include fd-var-color("border-bottom-color", $foreground-color, $varcolor);
      } @else {
        border-bottom-color: $foreground-color;
      }

      border-left-color: $background-color;
      border-right-color: $background-color;
    } @else if $direction == right {
      border-width: $width 0 $width $height;
      border-bottom-color: $background-color;

      @if $varcolor {
        @include fd-var-color("border-left-color", $foreground-color, $varcolor);
      } @else {
        border-left-color: $foreground-color;
      }

      border-top-color: $background-color;
    } @else if $direction == down {
      border-width: $height $width 0 $width;

      @if $varcolor {
        @include fd-var-color("border-top-color", $foreground-color, $varcolor);
      } @else {
        border-top-color: $foreground-color;
      }

      border-left-color: $background-color;
      border-right-color: $background-color;
    } @else if $direction == left {
      border-width: $width $height $width 0;
      border-bottom-color: $background-color;

      @if $varcolor {
        @include fd-var-color("border-right-color", $foreground-color, $varcolor);
      } @else {
        border-right-color: $foreground-color;
      }

      border-top-color: $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left: $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left: $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}

@mixin fd-button-reset {
  background-image: none;
  display: inline-block;
  appearance: none;
  outline: 0;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  background-color: transparent;
  border-radius: var(--sapButton_BorderCornerRadius);

  &::-moz-focus-inner {
    border: 0;
  }
  @content;
}

@mixin fd-rtl {
  @at-root {
    [dir="rtl"] &,
    &[dir="rtl"] {
      @content;
    }
  }
}

@mixin fd-link() {
  color: var(--sapLinkColor);
  text-decoration: none;
  display: inline-block;
  transition: all $fd-animation-speed ease-in;
  line-height: inherit;

  &--emphasized {
    font-weight: bold;
  }

  &:visited {
    color: var(--sapLink_Visited_Color);
  }

  @include fd-hover() {
    color: var(--sapLink_Hover_Color);
    text-decoration: underline;
  }

  @include fd-focus() {
    box-shadow: none;
    outline-offset: -0.0625rem;
    outline-width: var(--sapContent_FocusWidth);
    outline-color: var(--sapContent_FocusColor);
    outline-style: var(--sapContent_FocusStyle);
  }

  @include fd-active() {
    color: var(--sapLink_Active_Color);
  }

  &--inverted {
    color: var(--sapLink_InvertedColor);

    @include fd-hover() {
      color: var(--sapLink_InvertedColor);
    }
  }

  &--subtle {
    color: var(--sapLink_SubtleColor);
  }

  @include fd-disabled() {
    opacity: var(--sapContent_DisabledOpacity);
    color: var(--sapLinkColor);
    pointer-events: none;
  }
}

@mixin action-cursor {
  cursor: pointer;
}

@mixin multiline-truncate($lineHeight: 1.4em, $lineCount: 1, $backgroundColor: transparent) {
  position: relative;
  line-height: $lineHeight;
  max-height: $lineCount * $lineHeight;
  overflow: hidden;
  margin-right: -1em;
  padding-right: 1em;

  &::before {
    position: absolute;
    content: "...";
    right: 0;
    bottom: 1px;
  }

  &::after {
    content: "";
    position: absolute;
    right: 0;
    width: 1em;
    height: 1em;
    margin-top: 0.2em;
    background: $backgroundColor;
  }
}

@mixin fd-flex($direction: row) {
  display: flex;
  flex-direction: $direction;
  @content;
}

@mixin fd-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin fd-flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
  @content;
}

@mixin fd-flex-vertical-center {
  display: flex;
  align-items: center;
  @content;
}

@mixin fd-flex-vertical-bottom {
  display: flex;
  align-items: flex-end;
  @content;
}

@mixin fd-flex-horizontal-center {
  display: flex;
  justify-content: center;
  @content;
}

@mixin fd-screen-reader-only {
  position: absolute;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  border: 0;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  white-space: nowrap;
}

@mixin fd-remove-scrollbar {
  &::-webkit-scrollbar {
    display: none; // hide scrollbar but keep element scrollable for Chrome/Safari/Opera
  }

  -ms-overflow-style: none; // hide scrollbar but keep element scrollable for IE/Edge
  scrollbar-width: none; // hide scrollbar on firefox
}

@mixin fd-typography($fd-size, $color: var(--sapGroup_TitleTextColor)) {
  font-family: var(--sapFontHeaderFamily);
  color: $color;
  font-size: $fd-size;
}

$colors: (
  --fd-color-action-1: var(--sapButton_Active_Background, #0a6ed1),
  --fd-color-action-2: var(--sapButton_Background, #ffffff),
  --fd-color-action-3: var(--sapButton_Selected_Background, #0854a1),
  --fd-color-shell-1: var(--sapShellColor, #354a5f),
  --fd-color-shell-2: var(--sapShell_InteractiveTextColor, #d1e8ff),
  --fd-color-shell-3: var(--sapShell_Hover_Background, #283848),
  --fd-color-shell-4: var(--sapShell_Active_Background, #23303e),
  --fd-color-shell-5: var(--sapShell_InteractiveBorderColor, #7996b4),
  --fd-color-text-1: var(--sapTextColor, #32363a),
  --fd-color-text-2: var(--sapTextColor, #515559),
  --fd-color-text-3: var(--sapContent_LabelColor, #6a6d70),
  --fd-color-text-4: var(--sapfield_PlaceholderTextColor, #74777a),
  --fd-color-text-5: var(--sapContent_Selected_TextColor, #ffffff),
  --fd-color-background-1: var(--sapShell_Background, #edeff0),
  --fd-color-background-2: var(--sapBaseColor, #ffffff),
  --fd-color-background-3: var(--sapSuccessBackground, #f1fdf6),
  --fd-color-background-4: var(--sapWarningBackground, #fef7f1),
  --fd-color-background-5: var(--saperrorBackground, #ffebeb),
  --fd-color-background-6: var(--sapInformationBackground, #f5faff),
  --fd-color-background-7: var(--sapNeutralBackground, #f4f4f4),
  --fd-color-neutral-1: var(--sapList_footerBackground, #fafafa),
  --fd-color-neutral-2: var(--sapNeutralColor, #eeeeef),
  --fd-color-neutral-3: var(--sapPageHeader_BorderColor, #d9d9d9),
  --fd-color-neutral-4: var(--sapContent_UnratedColor, #89919a),
  --fd-color-neutral-5: var(--sapBackgroundColor, #f7f7f7),
  --fd-color-neutral-6: var(--sapList_HeaderBackground, #f2f2f2),
  --fd-color-status-1: var(--sapPositiveColor, #107e3e),
  --fd-color-status-2: var(--sapCriticalColor, #e9730c),
  --fd-color-status-3: var(--sapNegativeColor, #bb0000),
  --fd-color-status-4: var(--sapNeutralColor, #6a6d70),
  --fd-color-status-5: var(--sapInformativeColor, #0a6ed1),
  --fd-color-accent-1: var(--sapAccentColor1, #d08014),
  --fd-color-accent-2: var(--sapAccentColor2, #d04343),
  --fd-color-accent-3: var(--sapAccentColor3, #db1f77),
  --fd-color-accent-4: var(--sapAccentColor4, #c0399f),
  --fd-color-accent-5: var(--sapAccentColor5, #6367de),
  --fd-color-accent-6: var(--sapAccentColor6, #286eb4),
  --fd-color-accent-7: var(--sapAccentColor7, #0f828f),
  --fd-color-accent-8: var(--sapAccentColor8, #7ca10c),
  --fd-color-accent-9: var(--sapAccentColor9, #955ecf),
  --fd-color-accent-10: var(--sapAccentColor10, #647887),
  --fd-color-accent-11: var(--sapAccentColor1, #d17f15),
  --fd-color-accent-12: var(--sapAccentColor2, #d04343),
  --fd-color-accent-13: var(--sapAccentColor6, #2b78c5),
  --fd-color-accent-14: var(--sapAccentColor9, #0f828f),
  --fd-color-accent-15: var(--sapAccentColor4, #647887),
  --fd-color-action-hover: var(--sapButton_emphasized_Hover_Background, #085caf),
  --fd-color-action-selected: var(--sapSelectedColor, #0854a0),
  --fd-color-action-disabled: rgba(var(--sapSelectedColor, #0854a0), var(--sapContent_DisabledOpacity, 0.4)),
  --fd-color-background-hover: var(--sapList_AlternatingBackground, #fafafa),
  --fd-color-background-selected: var(--sapInformativeColor, #0a6ed1),
  --fd-color-background-selected-hover: var(--sapContent_Selected_Hover_Background, #095caf)
);

@mixin fd-theming($property, $color) {
  @if map-has-key($colors, $color) {
    $property: map-get($colors, $color);
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$color}`. " + "Please make sure it is defined in `$colors` map.";
  }
}
