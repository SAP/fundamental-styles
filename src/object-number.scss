@import "./new-settings";
@import "./mixins";

/*!
.fd-object-number+(--success | --warning | --error)
*/
$block: #{$fd-namespace}-object-number;

$color-states: (
  "positive": ("color": var(--sapPositiveTextColor)),
  "critical": ("color": var(--sapCriticalTextColor)),
  "negative": ("color": var(--sapNegativeTextColor)),
  "informative": ("color": var(--sapInformativeTextColor))
);

.#{$block} {
  // TEXT VARIABLES
  $fd-object-number-font-family: var(--sapFontFamily) !default;
  $fd-object-number-text-font-size: var(--sapFontMediumSize) !default;
  $fd-object-number-unit-font-size: var(--sapFontSmallSize) !default;
  $fd-object-number-neutral: var(--sapNeutralTextColor);

  // LARGE DESIGN VARIABLES
  $fd-object-number-font-size-large: 1.5rem;

  @include fd-reset();

  font-family: $fd-object-number-font-family;
  color: $fd-object-number-neutral;
  max-width: inherit;

  &__text,
  &__unit {
    max-width: inherit;
    display: inline-block;
    vertical-align: middle;
    padding-top: 0.125rem;

    @include fd-ellipsis();
  }

  &__text {
    font-size: $fd-object-number-text-font-size;
  }

  &__unit {
    font-size: $fd-object-number-unit-font-size;
  }

  @each $set-name, $color-set in $color-states {
    &--#{$set-name} {
      color: map_get($color-set, "color");
    }
  }

  // LARGE DESIGN
  &--large {
    .#{$block}__text,
    .#{$block}__unit {
      font-size: $fd-object-number-font-size-large;
    }
  }
}
