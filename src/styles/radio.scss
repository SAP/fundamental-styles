@import "./new-settings";
@import "./mixins";

/*!
.fd-radio
*/
$block: #{$fd-namespace}-radio;

%fd-radio-input-hidden {
  position: absolute;
  opacity: 0.0001;
}

.#{$block} {
  @mixin fd-radio-state($background-color, $text-color, $border-color, $border-size, $border-type, $box-shadow) {
    + .#{$block}__label {
      &::before {
        background-color: $background-color;
        border: $border-size $border-type $border-color;
      }

      &::after {
        background: $text-color;
      }

      @include fd-hover() {
        @include fd-disabled() {
          border-color: $border-color;
        }

        &::before {
          box-shadow: $box-shadow;
          background-color: var(--sapField_Hover_Background);
        }
      }
    }
  }

  $fd-radio-inner-circle-diameter: 1.375rem;
  $fd-radio-inner-circle-diameter-compact: 1rem;

  $fd-radio-outer-circle-margin: 0.6875rem;
  $fd-radio-outer-circle-margin-compact: 0.5rem;

  $fd-radio-inner-content-size: var(--fdRadio_Inner_Circle_Size); // inner circle size
  $fd-radio-inner-content-size-compact: var(--fdRadio_Inner_Circle_Compact_Size); // inner circle size for compact

  $fd-radio-inner-content-padding: var(--fdRadio_Inner_Circle_Offset); // aligns inner circle
  $fd-radio-inner-content-padding-compact: var(--fdRadio_Inner_Circle_Compact_Offset); // aligns inner circle for compact

  @include fd-form-base();

  @extend %fd-radio-input-hidden;

  &__label {
    @include fd-form-label();
    @include action-cursor();

    line-height: 1rem;
    display: flex;
    align-items: center;
    overflow: hidden;
    padding: $fd-radio-outer-circle-margin;

    &::before {
      content: "";
      height: $fd-radio-inner-circle-diameter;
      width: $fd-radio-inner-circle-diameter;
      min-width: $fd-radio-inner-circle-diameter;
      display: inline-flex;
      justify-content: center;
      align-items: center;
      background-color: var(--sapField_Background);
      color: var(--sapSelectedColor);
      border: var(--sapField_BorderWidth) solid var(--sapField_BorderColor);
      border-radius: 50%;
    }

    &::after {
      height: $fd-radio-inner-content-size;
      width: $fd-radio-inner-content-size;
      left: $fd-radio-inner-content-padding;
    }

    @include fd-focus() {
      outline: none;
    }

    @include fd-hover() {
      &::before {
        background-color: var(--sapField_Hover_Background);
        border-color: var(--sapField_Hover_BorderColor);
      }
    }

    @include fd-rtl() {
      &::after {
        right: $fd-radio-inner-content-padding;
      }
    }

    &--required,
    &[aria-required='true'] {
      .#{$block}__text {
        @include fd-form-radio-checkbox-required-label();
      }
    }
  }

  &__label-container {
    @include fd-reset();
    @include fd-flex-vertical-center();

    width: 100%;
    height: 1rem;
    pointer-events: none;
  }

  &__text {
    @include fd-reset();
    @include fd-ellipsis();
    @include fd-set-margins-x($fd-radio-outer-circle-margin, 0);

    color: var(--fdCheckbox_Label_Color);
  }

  &:checked + .#{$block}__label::after {
    content: "";
    position: absolute;
    border-radius: 50%;
    background: var(--fdRadio_Selected_Color);
  }

  // states
  &.is-warning,
  &.is-alert {
    @include fd-radio-state(var(--sapField_WarningBackground), var(--fdRadio_Warning_State_Color), var(--sapField_WarningColor), 0.125rem, var(--fdRadio_State_Border_Type), var(--fdCheckbox_Error_State_Hover_BoxShadow));
  }

  &.is-error {
    @include fd-radio-state(var(--sapField_InvalidBackground), var(--sapField_InvalidColor), var(--sapField_InvalidColor), 0.125rem, var(--fdRadio_State_Border_Type), var(--fdCheckbox_Error_State_Hover_BoxShadow));
  }

  &.is-success {
    @include fd-radio-state(var(--sapField_SuccessBackground), var(--sapField_SuccessColor), var(--sapField_SuccessColor), var(--sapField_BorderWidth), solid, var(--fdCheckbox_Success_State_Hover_BoxShadow));
  }

  &.is-information {
    @include fd-radio-state(var(--sapField_InformationBackground), var(--sapField_InformationColor), var(--sapField_InformationColor), 0.125rem, var(--fdRadio_State_Border_Type), var(--fdCheckbox_Information_State_Hover_BoxShadow));
  }

  &[readonly],
  &.is-readonly {
    @include fd-radio-state(var(--sapField_ReadOnly_Background), var(--sapContent_NonInteractiveIconColor), var(--sapField_ReadOnly_BorderColor), var(--sapField_BorderWidth), var(--fdCheckbox_ReadOnly_State_Border_Type), none);
  }

  @include fd-focus() {
    + .#{$block}__label {
      .#{$block}__label-container {
        @include fd-form-radio-checkbox-focus(var(--fdRadio_Outline_Offset));
      }
    }
  }

  @include fd-disabled() {
    opacity: 0.0001;

    + .#{$block}__label {
      pointer-events: none;
      opacity: 0.4;
    }
  }

  &--compact {
    + .#{$block}__label {
      padding: $fd-radio-outer-circle-margin-compact;

      &::before {
        height: $fd-radio-inner-circle-diameter-compact;
        width: $fd-radio-inner-circle-diameter-compact;
        min-width: $fd-radio-inner-circle-diameter-compact;
      }

      &::after {
        height: $fd-radio-inner-content-size-compact;
        width: $fd-radio-inner-content-size-compact;
        left: $fd-radio-inner-content-padding-compact;
      }

      @include fd-rtl() {
        &::before {
          padding-left: 0;
        }

        &::after {
          right: $fd-radio-inner-content-padding-compact;
        }
      }

      .#{$block}__text {
        @include fd-set-margins-x($fd-radio-outer-circle-margin-compact, 0);
      }
    }

    @include fd-focus() {
      + .#{$block}__label {
        .#{$block}__label-container {
          @include fd-form-radio-checkbox-focus(var(--fdRadio_Outline_Offset_Compact));
        }
      }
    }
  }
}
