@import "./settings";
@import "./mixins";
@import "./functions";

/*!
.fd-avatar+((--circle), (--thumbnail), (--xxs|--xs|--s|--m|--l|--xl|--xxl))
*/
$block: #{$fd-namespace}-avatar;

.#{$block} {
  // LOCAL VARS (set all themeable properties, always include !default)
  $fd-const-ratio: 1rem;
  $fd-avatar-sizes: (
    xs: $fd-const-ratio * 2,
    s: $fd-const-ratio * 3,
    m: $fd-const-ratio * 4,
    l: $fd-const-ratio * 5,
    xl: $fd-const-ratio * 7,
  ) !default;
  $fd-avatar-border-radius: $fd-border-radius !default;
  $fd-avatar-border-fade: rgba(0, 0, 0, 0.5); // Should be fade(var(--sapContent_ShadowColor), 10);
  $fd-avatar-color: var(--sapContent_ContrastTextColor) !default;
  $fd-avatar-background-color: var(--sapAccentColor6) !default;

  // BLOCK BASE *******************************************
  @at-root {
    [class*="#{$block}"] {
      @include fd-reset();

      color: $fd-avatar-color;
      background-color: $fd-avatar-background-color;
      display: inline-block;
      position: relative;
      vertical-align: middle;
      text-align: center;
      background-repeat: no-repeat;
      background-size: cover;
      background-position: 50%;
      border-radius: $fd-avatar-border-radius;
    }
  }
  // BLOCK MODIFIERS ************
  // sizes
  @each $size, $value in $fd-avatar-sizes {
    &.#{$block}--#{$size} {
      @include fd-reset-spacing();

      width: $value;
      height: $value;
      max-width: $value;
      max-height: $value;
      min-width: $value;
      min-height: $value;
      font-weight: 400;

      @if $size == xs or $size == s or $size == m {
        .#{$block}__zoom-icon {
          width: 1.125rem;
          height: 1.125rem;
          bottom: -0.125rem;
          right: -0.125rem;

          &::before {
            font-size: 0.75rem;
          }
        }
      }

      @if $size == xs or $size == s {
        line-height: 1.33333;
        font-stretch: condensed;
      }

      @if $size == xs {
        font-size: 1rem;
      }

      @if $size == s {
        font-size: 1.125rem;
      }

      @if $size == m {
        line-height: 1.42857;
        font-size: 1.5rem;
      }

      @if $size == l or $size == xl {
        line-height: 1.33333;
      }

      @if $size == l {
        font-size: 2.25rem;

        .#{$block}__zoom-icon {
          width: 1.25rem;
          height: 1.25rem;
          bottom: -0.1875rem;
          right: -0.1875rem;

          &::before {
            font-size: 0.875rem;
          }
        }
      }

      @if $size == xl {
        font-size: 3rem;

        .#{$block}__zoom-icon {
          width: 1.75rem;
          height: 1.75rem;
          bottom: -0.25rem;
          right: -0.25rem;

          &::before {
            font-size: 1rem;
            line-height: 1.75rem;
          }
        }
      }

      line-height: $value;
    }
  }
  // circle
  &.#{$block}--circle {
    border-radius: 50%;

    .#{$block}__zoom-icon {
      bottom: 0;
      right: 0;
    }
  }
  // thumbnail
  &.#{$block}--thumbnail {
    text-indent: -200%;
    overflow: hidden;
  }
  // background
  &.#{$block}--transparent {
    --fd-avatar-background-color: transparent;

    @include fd-var-color("color", map-get($fd-colors-text, 1), --fd-color-text-1);
    @include fd-var-color("background-color", transparent);
  }
  // zoom icon
  &__zoom-icon {
    @include fd-var-color("background-color", $fd-link-color, --fd-link-color);
    @include fd-var-color("color", $fd-avatar-color, --fd-avatar-color);

    position: absolute;
    border-radius: 50%;
  }
  // optional border
  &.#{$block}--border {
    box-shadow: inset 0 0 0 0.0625rem $fd-avatar-border-fade;
  }
}
