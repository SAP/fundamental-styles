@import "./settings";
@import "./mixins";
@import "./functions";

/*!
.fd-layout-grid
*/

$block: #{$fd-namespace}-layout-grid;

.#{$block}-container {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  max-width: 100%;
  position: relative;

  @media (min-width: 0) {
    margin: 0 -0.25rem;

    :last-child {
      margin-bottom: 0;
    }
  }

  @media (min-width: 600px) {
    margin: 0 -0.5rem;

    :last-child {
      margin-bottom: 0;
    }
  }
}

.#{$block}-row {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  width: 100%;
  position: relative;
  margin-bottom: 1rem;

  :last-child {
    margin-bottom: 0;
  }

  @media (max-width: 600px) {
    margin-bottom: 0.5rem;

    :last-child {
      margin-bottom: 0;
    }
  }
}

// for columns

.#{$block} {
  @include fd-reset();

  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  align-content: flex-start;
  width: 100%;

  &--no-gutter {
    padding: 0;
  }

  &--nested {
    padding: 0;
  }

  &--offset {
    @for $n from 1 through 12 {
      &-#{$n} {
        margin-left: ( ( $n / 12 ) *100%);
      }
    }
  }

  // with just column no matter what the size
  @for $n from 1 through 12 {
    &--col-#{$n} {
      width: ( ( $n / 12 ) *100%);
    }
  }

  // with modified sizing

  @media (min-width: 0) {
    padding: 0 0.25rem;

    &--nested {
      padding: 0;
    }

    @for $n from 1 through 12 {
      &-s--col-#{$n} {
        width: ( ( $n / 12 ) *100%);
      }
    }
  }

  @media (min-width: 600px) {
    padding: 0 0.5rem;

    @for $n from 1 through 12 {
      &-m--col-#{$n} {
        width: ( ( $n / 12 ) *100%);
      }
    }
  }

  @media (min-width: 1024px) {
    @for $n from 1 through 12 {
      &-l--col-#{$n} {
        width: ( ( $n / 12 ) *100%);
      }
    }
  }

  @media (min-width: 1440px) {
    @for $n from 1 through 16 {
      &-xl--col-#{$n} {
        width: ( ( $n / 16 ) *100%);
      }
    }
  }
}
