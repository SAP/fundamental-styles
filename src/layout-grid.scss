@import "./settings";
@import "./mixins";
@import "./functions";

/*!
.fd-col
*/

$block: #{$fd-namespace}-col;
$blockContainer: #{$fd-namespace}-container;
$blockRow: #{$fd-namespace}-row;

@media (min-width: 0) {
  .#{$blockContainer} {
    @include fd-reset();

    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    flex: 0 0 100%;
    position: relative;
    margin: 0 -0.25rem;

    &--no-gap {
      margin: 0;
    }

    :last-child {
      margin-bottom: 0;
    }

    .#{$blockRow} {
      margin-left: 0;
      margin-right: 0;
    }
  }

  .#{$blockRow} {
    @include fd-reset();

    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    flex: 0 0 100%;
    position: relative;
    margin-bottom: 1rem;
    margin-left: -0.25rem;
    margin-right: -0.25rem;

    :last-child {
      margin-bottom: 0;
    }

    &--inner-flex {
      display: flex;
    }
  }

  .#{$block} {
    @include fd-reset();

    flex: 0 0 100%;
    padding: 0 0.25rem;

    @for $n from 1 through 12 {
      &--#{$n} {
        flex: 0 0 ( ( $n / 12 ) *100%);
      }
    }

    @for $n from 1 through 12 {
      &--offset-#{$n} {
        margin-left: ( ( $n / 12 ) *100%);
      }
    }

    &--no-gap {
      padding: 0;
    }

    .#{$blockRow} {
      margin-left: -0.25rem;
      margin-right: -0.25rem;
    }
  }
}

@media (min-width: 600px) {
  .#{$blockContainer} {
    margin: 0 -0.5rem;

    &--no-gap {
      margin: 0;
    }

    :last-child {
      margin-bottom: 0;
    }
  }

  .#{$blockRow} {
    margin-bottom: 1rem;
  }

  .#{$block} {
    padding: 0 0.5rem;

    @for $n from 1 through 12 {
      &--#{$n}--m {
        flex: 0 0 ( ( $n / 12 ) *100%);
      }
    }

    &--no-gap {
      padding: 0;
    }

    .#{$blockRow} {
      margin-left: -0.5rem;
      margin-right: -0.5rem;
    }
  }
}

@media (min-width: 1024px) {
  .#{$block} {
    @for $n from 1 through 12 {
      &--#{$n}--l {
        flex: 0 0 ( ( $n / 12 ) *100%);
      }
    }
  }
}

@media (min-width: 1440px) {
  .#{$block} {
    @for $n from 1 through 16 {
      &--#{$n}--xl {
        flex: 0 0 ( ( $n / 16 ) *100%);
      }
    }
  }
}
