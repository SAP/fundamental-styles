@import './new-settings';
@import './mixins';
@import './mixins/button/button-helper';
@import './mixins/button/button-types';

$fd-button-icon-font-size: 1rem;
$fd-button-badge-spacing: 0.25rem;

.#{$block-button} {
  --fdButton_Height: 2.25rem;
  --fdButton_Clickable_Height: 2.75rem;
  --fdButton_Padding_X: 0.625rem;
  --fdButton_Min_Width: 2.25rem;

  @include fd-reset();
  @include fd-button-reset();
  @include fd-inline-flex-center();
  @include fd-set-paddings-x-equal(calc(var(--fdButton_Padding_X) - var(--sapButton_BorderWidth)));

  height: var(--fdButton_Height);
  max-height: var(--fdButton_Height);
  min-width: var(--fdButton_Min_Width);
  position: relative;
  text-align: center;
  text-shadow: var(--fdButton_Text_Shadow);
  border-style: solid;
  border-width: var(--sapButton_BorderWidth);

  // Extended touchable area
  &::before {
    content: '';
    display: block;
    position: absolute;
    height: auto;
    width: 100%;
    top: calc((var(--fdButton_Clickable_Height) - var(--fdButton_Height)) * 0.5);
    bottom: calc((var(--fdButton_Clickable_Height) - var(--fdButton_Height)) * 0.5);
    left: 0;
    right: 0;
  }

  &__text {
    @include fd-reset();
    @include fd-ellipsis();

    font-weight: inherit;
    color: inherit;
  }

  &,
  &__text {
    font-family: var(--fdButton_Font_Family);
  }

  *:not(:first-child):not(.#{$block-button}__badge) {
    @include fd-set-margin-left(0.375rem);
  }

  > [class*='sap-icon'] {
    color: inherit;
    width: $fd-button-icon-font-size;
    min-width: $fd-button-icon-font-size;
    height: $fd-button-icon-font-size;
    font-size: $fd-button-icon-font-size;
    line-height: $fd-button-icon-font-size;
    font-style: normal;
    vertical-align: text-bottom;

    &::before,
    &::after {
      width: inherit;
      height: inherit;
      font-size: inherit;
      line-height: inherit;
    }
  }

  &__badge {
    @include fd-reset();
    @include fd-inline-flex-center();
    @include fd-set-position-right(-$fd-button-badge-spacing);

    z-index: 1;
    height: 1rem;
    position: var(--fdButton_Badge_Position, absolute);
    padding: 0 0.3125rem;
    border-radius: 0.5rem;
    top: -$fd-button-badge-spacing;
    font-size: var(--sapFontSmallSize);
    color: var(--sapContent_BadgeTextColor);
    border: 0.0625rem solid var(--fdButton_Badge_Border_Color);
    background-color: var(--sapContent_BadgeBackground);

    @include fd-set-margin-left(var(--fdButton_Badge_Margin_Left, 0));
  }

  @include fd-compact-or-condensed() {
    --fdButton_Height: 1.625rem;
    --fdButton_Clickable_Height: 2rem;
    --fdButton_Padding_X: 0.5rem;
    --fdButton_Min_Width: 2rem;
    --fdButton_Badge_Position: static;
    --fdButton_Badge_Margin_Left: #{$fd-button-badge-spacing};
  }

  &--menu {
    @include fd-ellipsis();

    max-width: 12rem;

    &-fixed-width {
      justify-content: space-between;
    }

    .#{$block-button}__text {
      line-height: 1rem;
    }
  }

  &--full-width {
    @include fd-flex-center();

    width: 100%;
    min-width: 100%;
  }

  &--text-alignment {
    &-left {
      text-align: left;
      justify-content: flex-start;
    }

    &-right {
      text-align: right;
      justify-content: flex-end;
    }
  }

  &--decisive {
    min-width: 4rem;
  }

  &__instructions {
    @include fd-screen-reader-only();
  }

  @include fd-focus() {
    @include fd-button-focus(var(--fdButton_Outline_Offset));

    box-shadow: none;
  }

  // @deprecated selected state
  @include fd-button-active-selected() {
    box-shadow: none;
    outline: none;
  }

  @include fd-disabled() {
    box-shadow: none;
    cursor: not-allowed;
    opacity: var(--sapContent_DisabledOpacity);
  }

  // Types, including default one
  @include fd-button-types();

  /**
    Tool Header Button
    This is a BTP extension of the Button
    The code is done this way (not overwriting the CSS variables of Button)
    in case we need to move to a separate component or library in future
  */
  &--tool-header {
    --fdButton_ToolHeader_Size: 2.5rem;
    --fdButton_ToolHeader_Icon_Size: 1rem;
    --fdButton_ToolHeader_Padding: 0.75rem;
    --fdButton_ToolHeader_Border_Radius: 0.375rem;
    --fdButton_ToolHeader_Color: var(--sapContent_IconColor);
    --fdButton_ToolHeader_Background: var(--sapButton_Lite_Background);
    --fdButton_ToolHeader_Border_Color: var(--fdButton_ToolHeader_Border_Color_Normal);

    @include fd-set-square(var(--fdButton_ToolHeader_Size));

    @include fd-icon-selector() {
      @include fd-flex-center();

      color: inherit;
      width: var(--fdButton_ToolHeader_Icon_Size);
      height: var(--fdButton_ToolHeader_Icon_Size);
      font-size: var(--fdButton_ToolHeader_Icon_Size);
    }

    padding: var(--fdButton_ToolHeader_Padding);
    color: var(--fdButton_ToolHeader_Color);
    background: var(--fdButton_ToolHeader_Background);
    border-radius: var(--fdButton_ToolHeader_Border_Radius);
    border: var(--sapButton_BorderWidth) solid var(--fdButton_ToolHeader_Border_Color);

    @include fd-hover() {
      --fdButton_ToolHeader_Background: var(--sapButton_Lite_Hover_Background);
      --fdButton_ToolHeader_Border_Color: var(--fdButton_ToolHeader_Border_Color_Hover);
      --fdButton_Hover_Shadow: none;
    }

    @include fd-active() {
      --fdButton_ToolHeader_Background: var(--sapActiveColor);
      --fdButton_ToolHeader_Border_Color: var(--fdButton_ToolHeader_Border_Color_Active);

      outline: none;

      @include fd-focus() {
        --fdButton_ToolHeader_Border_Radius: 0.375rem;
        --fdButton_ToolHeader_Background: var(--sapActiveColor);
        --fdButton_ToolHeader_Border_Color: var(--fdButton_ToolHeader_Border_Color_Active);

        outline: none;

        &::after {
          border: none;
        }
      }
    }

    @include fd-focus() {
      --fdButton_ToolHeader_Background: var(--sapButton_Background);
      --fdButton_ToolHeader_Border_Color: var(--fdButton_ToolHeader_Border_Color_Focus);
      --fdButton_ToolHeader_Border_Radius: var(--fdButton_ToolHeader_Border_Radius_Focus);

      outline: var(--sapContent_FocusStyle) var(--sapContent_FocusWidth) var(--sapContent_FocusColor);

      &::after {
        border: none;
      }
    }

    @include fd-disabled() {
      --fdButton_ToolHeader_Background: var(--sapButton_Lite_Background);
      --fdButton_ToolHeader_Border_Color: var(--fdButton_ToolHeader_Border_Color_Disabled);

      pointer-events: none;
      opacity: var(--sapContent_DisabledOpacity);
    }

    @include fd-compact-and-condensed() {
      --fdButton_ToolHeader_Padding: 0.5rem;
      --fdButton_ToolHeader_Size: 2rem;
    }

    .#{$block-button}__badge {
      @include fd-reset();
      @include fd-set-square(0.625rem);
      @include fd-set-position-right(-0.125rem);

      top: -0.125rem;
      position: absolute;
      border-radius: 100%;
      background: var(--sapContent_BadgeBackground);
      border: 0.0625rem solid var(--fdButton_ToolHeader_Badge_Border_Color);
    }
  }

  /**
    Nested Button
    This is a BTP extension of the Button
    The code is done this way (not overwriting the CSS variables of Button)
    in case we need to move to a separate component or library in future
  */
  &--nested {
    --fdButton_Nested_Size: 1.25rem;
    --fdButton_Nested_Icon_Size: 0.75rem;
    --fdButton_Nested_Click_Area: 2rem;
    --fdButton_Nested_Color: var(--sapContent_IconColor);
    --fdButton_Nested_Background: var(--sapButton_Lite_Background);
    --fdButton_Nested_Border_Color: var(--fdButton_ToolHeader_Border_Color_Normal);
    --fdButton_Nested_Border_Radius: 0.75rem;

    @include fd-set-square(var(--fdButton_Nested_Size));

    @include fd-icon-selector() {
      color: inherit;
      font-size: var(--fdButton_Nested_Icon_Size);
    }

    padding: 0;
    color: var(--fdButton_Nested_Color);
    background: var(--fdButton_Nested_Background);
    border-radius: var(--fdButton_Nested_Border_Radius);
    border: var(--sapButton_BorderWidth) solid var(--fdButton_Nested_Border_Color);

    &::before {
      @include fd-set-equal-positions(auto);
      @include fd-set-square(var(--fdButton_Nested_Click_Area));
    }

    @include fd-hover() {
      --fdButton_Nested_Background: var(--sapButton_Lite_Hover_Background);
      --fdButton_Nested_Border_Color: var(--fdButton_Nested_Border_Color_Hover);
      --fdButton_Hover_Shadow: none;
    }

    @include fd-active() {
      --fdButton_Nested_Background: var(--sapActiveColor);
      --fdButton_Nested_Border_Color: var(--fdButton_Nested_Border_Color_Active);

      outline: none;

      @include fd-focus() {
        --fdButton_Nested_Border_Radius: 0.75rem;
        --fdButton_Nested_Background: var(--sapActiveColor);
        --fdButton_Nested_Border_Color: var(--fdButton_Nested_Border_Color_Active);

        outline: none;

        &::after {
          border: none;
        }
      }
    }

    @include fd-focus() {
      --fdButton_Nested_Background: var(--sapButton_Background);
      --fdButton_Nested_Border_Color: var(--fdButton_Nested_Border_Color_Focus);
      --fdButton_Nested_Border_Radius: var(--fdButton_Nested_Border_Radius_Focus);

      outline: var(--sapContent_FocusStyle) var(--sapContent_FocusWidth) var(--sapContent_FocusColor);

      &::after {
        border: none;
      }
    }

    @include fd-disabled() {
      --fdButton_Nested_Background: var(--sapButton_Lite_Background);
      --fdButton_Nested_Border_Color: var(--fdButton_Nested_Border_Color_Disabled);

      pointer-events: none;
      opacity: var(--sapContent_DisabledOpacity);
    }

    @include fd-compact-and-condensed() {
      --fdButton_Nested_Click_Area: 1.625rem;
    }
  }
}
