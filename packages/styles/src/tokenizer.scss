@use "sass:map";

@import "./new-settings";
@import "./mixins";

$block: #{$fd-namespace}-tokenizer;

.#{$block} {
  $fd-tokenizer-compact-spacing: 0.25rem;
  $fd-tokenizer-spacing: 0.3125rem;
  $fd-tokenizer-input-width: 3rem;
  $fd-tokenizer-input-width-compact: 2rem;

  @include fd-input-field-base();

  width: 100%;
  display: flex;
  padding-inline: 0;
  padding-block: 0;
  margin-inline: 0;
  margin-block: 0;
  border: none;
  align-items: center;

  @include fd-hover() {
    box-shadow: none;
  }

  &__inner {
    @include fd-remove-scrollbar();

    padding-block: 0;
    padding-inline: var(--fdTokenizer_Inner_Padding, #{$fd-tokenizer-spacing});
    overflow: hidden;
    float: right;
    white-space: nowrap;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }

  .#{$fd-namespace}-token {
    margin-inline-end: $fd-tokenizer-spacing;
    max-width: calc(100% - #{$fd-tokenizer-input-width} - #{$fd-tokenizer-spacing});
  }

  &__indicator {
    @include fd-reset();

    display: inline-block;
    cursor: pointer;
    color: var(--fdTokenizer_Indicator_Color);
  }

  .#{$block}__input {
    background: transparent;
    box-shadow: none;
    height: 100%;
    min-height: 100%;

    &.#{$fd-namespace}-input {
      border: none;
      padding-inline: 0;
      padding-block: 0;
      min-width: $fd-tokenizer-input-width;
    }

    &:first-child {
      padding-block: 0;
      padding-inline: $fd-tokenizer-spacing;
    }

    &:last-child {
      flex-basis: 100%;
    }

    @include fd-focus() {
      @include fd-input-field-nested-reset();

      border: none;
      outline: none;
    }

    @include fd-hover() {
      @include fd-input-field-nested-reset();
    }
  }

  @include fd-focus() {
    box-shadow: none;
    border: none;
    outline-offset: -0.0625rem;
    outline: var(--sapContent_FocusColor) var(--sapContent_FocusStyle) var(--sapContent_FocusWidth);
  }

  @include fd-compact-or-condensed() {
    @include fd-set-min-height($fd-input-field-height--compact);

    --fdTokenizer_Inner_Padding: #{$fd-tokenizer-compact-spacing};
    --fdInput_Field_Compact_Min_Width: #{$fd-tokenizer-input-width-compact};

    .#{$block}__input:first-child {
      padding-block: 0;
      padding-inline: $fd-tokenizer-compact-spacing;
    }

    .#{$fd-namespace}-token {
      margin-inline-end: $fd-tokenizer-compact-spacing;
      max-width: calc(100% - #{$fd-tokenizer-input-width-compact} - #{$fd-tokenizer-compact-spacing});
    }
  }

  &--readonly {
    overflow: visible;
    background-color: var(--sapField_ReadOnly_Background);
    .#{$block}__inner {
      overflow: visible;
    }

    .#{$block}__input {
      @include fd-readonly() {
        @include fd-input-field-nested-reset();

        @include fd-focus() {
          @include fd-input-field-nested-reset();
        }
      }
    }
  }

  &--display {
    overflow: visible;

    .#{$block}__indicator {
      .#{$fd-namespace}-popover {
        &__control {
          cursor: pointer;
          pointer-events: all; // we enable here the pointer-events so we can click on the popover control
        }
    
        &__body {
          pointer-events: none; // we disable the events on the popover body so we don't select a token
        }
      }
    }

    .#{$block}__input {
      display: none; // we don't need this input on display mode and it adds width to the entire control
    }

    .#{$block}__inner {
      overflow: visible;
    }

    .#{$fd-namespace}-token {
      margin-inline-end: 0;

      &--display {
        &::after {
          content: '\00B7';
          display: inline-flex; // this will prevent the bullet going into a new line
          align-items: center;
          justify-content: center;
          min-width: 1rem;
        }

        &:has(+ .#{$block}__input) { //hide the bullet when we don't have an overflow
          &::after {
            content: '';
            min-width: 0;
          }
        }
      }
    }

    & + .#{$fd-namespace}-input-group__addon.#{$fd-namespace}-input-group__addon--button {
      display: none; // we need to hide the button in display mode
    }
  }

  &--scrollable {
    .#{$block}__inner {
      justify-content: initial;
      overflow-x: scroll;
    }
  }
}
