@use "sass:map";

@import "./new-settings";
@import "./mixins";
@import "./mixins/button/button-helper";

$block: #{$fd-namespace}-button-split;
$split-button-states: (
  "emphasized": (
    "padBackground": var(--sapButton_Emphasized_Background),
    "separatorDisplay": var(--fdButton_Menu_Emphasized_Separator_Display),
    "separatorHoverDisplay": var(--fdButton_Menu_Emphasized_Hover_Separator_Display),
    "separatorBackground": var(--sapButton_Emphasized_TextColor),
    "borderColor": var(--fdButton_Menu_Emphasized_Shadow_Color)
  ),
  "transparent": (
    "padBackground": var(--sapButton_Lite_Background),
    "separatorDisplay": var(--fdButton_Menu_Transparent_Separator_Display),
    "separatorBackground": var(--sapButton_Lite_TextColor),
    "borderColor": var(--fdButton_Menu_Transparent_Border_Color)
  ),
  "ghost": (
    "padBackground": var(--fdButton_Ghost_Background),
    "separatorDisplay": var(--fdButton_Menu_Separator_Display),
    "separatorBackground": var(--sapButton_TextColor),
    "borderColor": var(--fdButton_Menu_Transparent_Border_Color)
  ),
  "positive": (
    "padBackground": var(--sapButton_Accept_Background),
    "separatorDisplay": var(--fdButton_Menu_Separator_Display),
    "separatorBackground": var(--sapButton_Accept_TextColor),
    "borderColor": var(--fdButton_Menu_Positive_Shadow_Color)
  ),
  "negative": (
    "padBackground": var(--sapButton_Reject_Background),
    "separatorDisplay": var(--fdButton_Menu_Separator_Display),
    "separatorBackground": var(--sapButton_Reject_TextColor),
    "borderColor": var(--fdButton_Menu_Negative_Shadow_Color)
  ),
  "attention": (
    "padBackground": var(--sapButton_Attention_Background),
    "separatorDisplay": var(--fdButton_Menu_Separator_Display),
    "separatorBackground": var(--sapButton_Attention_TextColor),
    "borderColor": var(--fdButton_Menu_Attention_Shadow_Color)
  )
);

.#{$block} {
  --fdButtonSplit_Separator_Offset: 2.125rem;

  &::before {
    --fdButtonPrioritizedBorderColor: var(--fdButton_Menu_Default_Shadow_Color);
  }

  @mixin fd-split-button-separator($display, $background, $hoverDisplay: none) {
    &::after {
      content: "";
      display: $display;
      position: absolute;
      top: 50%;
      right: var(--fdButtonSplit_Separator_Offset);
      width: var(--sapButton_BorderWidth);
      height: var(--fdButton_Menu_Transparent_Separator_Height);
      background: $background;
      transform: translate(0, -50%);
      margin: 0 0.125rem;
      z-index: 10;
    }

    @include fd-hover() {
      &::after {
        display: $hoverDisplay;
      }
    }

    @include fd-rtl() {
      &::after {
        right: auto;
        left: var(--fdButtonSplit_Separator_Offset);
      }
    }
  }

  @include fd-reset();
  @include fd-button-pad();

  display: inline-flex;
  vertical-align: middle;
  position: relative;

  @include fd-split-button-separator(var(--fdButton_Menu_Separator_Display), var(--sapButton_TextColor));

  > button {
    margin: 0;

    --fdButtonPrioritizedBorderColor: var(--fdButton_Split_Border_Color);
    --fdButtonPrioritizedBackgroundColor: var(--fdButton_Split_Background_Color);

    &:first-of-type {
      @include fd-set-margin-right(var(--fdButton_Menu_Offset));
      @include fd-flex-vertical-center();

      justify-content: flex-start;
      border-radius: var(--fdButton_Border_Radius_Left);

      @include fd-focus() {
        &::after {
          border-radius: var(--fdButton_Border_Radius_Outline_Left);
        }
      }

      @include fd-rtl() {
        border-radius: var(--fdButton_Border_Radius_Left_RTL);

        @include fd-focus() {
          &::after {
            border-radius: var(--fdButton_Border_Radius_Outline_Left_RTL);
          }
        }
      }
    }

    &:nth-of-type(2) {
      border-radius: var(--fdButton_Border_Radius_Right);

      @include fd-focus() {
        &::after {
          border-radius: var(--fdButton_Border_Radius_Outline_Right);
        }
      }

      @include fd-rtl() {
        border-radius: var(--fdButton_Border_Radius_Right_RTL);

        @include fd-focus() {
          &::after {
            border-radius: var(--fdButton_Border_Radius_Outline_Right_RTL);
          }
        }
      }
    }

    @include fd-hover() {
      box-shadow: none;
      z-index: 1;
    }
  }

  @each $set-name, $props-set in $split-button-states {
    &--#{$set-name} {
      @include fd-button-pad(map.get($props-set, "padBackground"), false);
      @include fd-split-button-separator(map.get($props-set, "separatorDisplay"), map.get($props-set, "separatorBackground"), map.get($props-set, "separatorHoverDisplay"));

      &::before {
        --fdButtonPrioritizedBorderColor: #{map.get($props-set, "borderColor")};
      }
    }
  }

  .#{$block}__text {
    @include fd-reset();
    @include fd-ellipsis();

    color: inherit;
    display: block;
    max-width: var(--fdButtonSplit_Text_Max_Width, 8.5rem); // 12rem - arrow button - paddings
  }

  &--emphasized {
    > button {
      &:first-of-type {
        @include fd-set-margin-right(var(--fdButton_Menu_Emphasized_Margin));
      }
    }

    .#{$block}__text {
      font-weight: var(--sapButton_Emphasized_FontWeight);
    }
  }

  @include fd-compact-or-condensed() {
    --fdButtonSplit_Text_Max_Width: 9rem;
    --fdButtonSplit_Separator_Offset: 1.875rem;
  }
}
