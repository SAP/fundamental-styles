@import "./new-settings";
@import "./mixins";

/*!
.fd-radio
*/
$block: #{$fd-namespace}-radio;

%fd-radio-input-hidden {
  position: absolute;
  opacity: 0.0001;
}

.#{$block} {
  @mixin fd-radio-label() {
    + .#{$block}__label {
      @content;
    }
  }

  @mixin fd-radio-label-states() {
    &:checked + .#{$block}__label::after,
    & + .#{$block}__label::before {
      @content;
    }
  }

  @include fd-form-base(false, false);

  @extend %fd-radio-input-hidden;

  &__label {
    @include fd-form-label();
    @include fd-action-cursor();

    line-height: 1rem;
    display: flex;
    align-items: center;
    overflow: hidden;
    padding: var(--fdRadio_Outer_Circle_Padding);
    color: var(--sapField_TextColor);

    &::before {
      @include fd-form-radio-icon-base(var(--fdRadio_Inner_Circle_Diameter));

      border-radius: 50%;
      margin-right: var(--fdRadio_Outer_Circle_Padding);
      background-color: var(--fdRadio_Background_Color);
      border: var(--fdRadio_Inner_Border_Width) var(--fdRadio_Inner_Border_Style) var(--fdRadio_Inner_Border_Color);
    }

    &::after {
      @include fd-square(var(--fdRadio_Inner_Content_Size));

      top: var(--fdRadio_Inner_Content_Padding);
      left: var(--fdRadio_Inner_Content_Padding);
    }

    @include fd-focus() {
      outline: none;
    }

    @include fd-hover() {
      &::before {
        background-color: var(--fdRadio_Hover_Background_Color);

        --fdRadio_Inner_Border_Width: var(--fdRadio_Inner_Border_Width_Default_Hover);
        --fdRadio_Inner_Border_Style: var(--fdRadio_Inner_Border_Style_Default_Hover);
        --fdRadio_Inner_Border_Color: var(--fdRadio_Inner_Border_Color_Default_Hover);
        --fdRadio_Active_Dot_Color: var(--fdRadio_Active_Dot_Color_Default_Hover);
        --fdRadio_Hover_Background_Color: var(--fdRadio_Background_Color_Default_Hover);
      }
    }

    @include fd-rtl() {
      &::before {
        margin-left: var(--fdRadio_Outer_Circle_Padding);
        margin-right: 0;
      }

      &::after {
        right: var(--fdRadio_Inner_Content_Padding);
      }
    }

    @include fd-empty() {
      padding: var(--fdRadio_Outer_Circle_Padding);
      margin: 0;

      &::before,
      &::after {
        margin-right: 0;
        margin-left: 0;
      }
    }
  }

  &:checked + .#{$block}__label::after {
    content: "";
    position: absolute;
    border-radius: 50%;
    background: var(--fdRadio_Active_Dot_Color);
  }

  // states
  &.is-error {
    @include fd-radio-label-states() {
      --fdRadio_Background_Color: var(--fdRadio_Background_Color_Error);
      --fdRadio_Inner_Border_Width: var(--fdRadio_Inner_Border_Width_Error);
      --fdRadio_Inner_Border_Style: var(--fdRadio_Inner_Border_Style_Error);
      --fdRadio_Inner_Border_Color: var(--fdRadio_Inner_Border_Color_Error);
      --fdRadio_Active_Dot_Color: var(--fdRadio_Active_Dot_Color_Error);
      --fdRadio_Hover_Background_Color: var(--fdRadio_Background_Color_Error_Hover);
    }
  }

  &.is-warning,
  &.is-alert {
    @include fd-radio-label-states() {
      --fdRadio_Background_Color: var(--fdRadio_Background_Color_Warning);
      --fdRadio_Inner_Border_Width: var(--fdRadio_Inner_Border_Width_Warning);
      --fdRadio_Inner_Border_Style: var(--fdRadio_Inner_Border_Style_Warning);
      --fdRadio_Inner_Border_Color: var(--fdRadio_Inner_Border_Color_Warning);
      --fdRadio_Active_Dot_Color: var(--fdRadio_Active_Dot_Color_Warning);
      --fdRadio_Hover_Background_Color: var(--fdRadio_Background_Color_Warning_Hover);
    }
  }

  &.is-success {
    @include fd-radio-label-states() {
      --fdRadio_Background_Color: var(--fdRadio_Background_Color_Success);
      --fdRadio_Inner_Border_Width: var(--fdRadio_Inner_Border_Width_Success);
      --fdRadio_Inner_Border_Style: var(--fdRadio_Inner_Border_Style_Success);
      --fdRadio_Inner_Border_Color: var(--fdRadio_Inner_Border_Color_Success);
      --fdRadio_Active_Dot_Color: var(--fdRadio_Active_Dot_Color_Success);
      --fdRadio_Hover_Background_Color: var(--fdRadio_Background_Color_Success_Hover);
    }
  }

  &.is-information {
    @include fd-radio-label-states() {
      --fdRadio_Background_Color: var(--fdRadio_Background_Color_Information);
      --fdRadio_Inner_Border_Width: var(--fdRadio_Inner_Border_Width_Information);
      --fdRadio_Inner_Border_Style: var(--fdRadio_Inner_Border_Style_Information);
      --fdRadio_Inner_Border_Color: var(--fdRadio_Inner_Border_Color_Information);
      --fdRadio_Active_Dot_Color: var(--fdRadio_Active_Dot_Color_Information);
      --fdRadio_Hover_Background_Color: var(--fdRadio_Background_Color_Information_Hover);
    }
  }

  @include fd-readonly() {
    @include fd-radio-label-states() {
      --fdRadio_Background_Color: var(--fdRadio_Background_Color_ReadOnly);
      --fdRadio_Inner_Border_Width: var(--fdRadio_Inner_Border_Width_ReadOnly);
      --fdRadio_Inner_Border_Style: var(--fdRadio_Inner_Border_Style_ReadOnly);
      --fdRadio_Inner_Border_Color: var(--fdRadio_Inner_Border_Color_ReadOnly);
      --fdRadio_Active_Dot_Color: var(--fdRadio_Active_Dot_Color_ReadOnly);
    }
  }

  @include fd-focus() {
    @include fd-radio-label() {
      @include fd-form-radio-focus(var(--fdRadio_Focus_Outline_Offset), var(--fdRadio_Outer_Circle_Padding), var(--fdRadio_Outline_Border_Radius));
    }
  }

  @include fd-disabled() {
    opacity: 0.0001;

    @include fd-radio-label() {
      pointer-events: none;
      opacity: var(--sapContent_DisabledOpacity);
    }
  }

  @include fd-compact-or-condensed() {
    @include fd-radio-label() {
      --fdRadio_Outer_Circle_Padding: var(--fdRadio_Compact_Outer_Circle_Padding);
      --fdRadio_Inner_Circle_Diameter: var(--fdRadio_Compact_Inner_Circle_Diameter);
      --fdRadio_Inner_Content_Size: var(--fdRadio_Inner_Content_Size_Compact);
      --fdRadio_Inner_Content_Padding: var(--fdRadio_Inner_Content_Padding_Compact);
    }

    @include fd-focus() {
      @include fd-radio-label() {
        --fdRadio_Outer_Circle_Padding: var(--fdRadio_Compact_Outer_Circle_Padding);
        --fdRadio_Outline_Border_Radius: var(--fdRadio_Compact_Outline_Border_radius);
      }
    }
  }
}
