@use "sass:map";

@import "./new-settings";
@import "./mixins";
@import "./mixins/button/button-helper";

$block: #{$fd-namespace}-input-group;
$fd-input-padding: 0.625rem;
$fd-input-border-radius: var(--sapField_BorderCornerRadius);

.#{$block} {
  @include fd-input-field-base(
    false,
    false,
    --fdInputGroup_Background,
    --fdInputGroup_Background_Color,
    --fdInputGroup_Hover_Background,
    --fdInputGroup_Hover_Background_Color);
  @include fd-input-field-states();
  @include fd-input-group-button-overwrite();

  padding-block: 0;
  padding-inline: 0;
  width: 100%;
  height: var(--sapElement_Height);
  display: flex;
  overflow: hidden;

  --fdInput_Height: 100%;
  --fdInput_Compact_Height: 100%;

  .#{$block}__input {
    @include fd-reset-child-spacing();

    flex: 1 1 10rem;
    background: none;
    background-color: var(--fdInputGroup_Input_Background, transparent);
    padding-inline: 0.25rem;
    text-shadow: var(--fdInputGroup_Text_Shadow);
    border: var(--fdInputGroup_Input_Border, none);
    color: var(--fdInputGroup_Input_Color, inherit);
    box-shadow: none;

    &::placeholder {
      color: var(--fdInputGroup_Input_Placeholder_Color, var(--sapField_PlaceholderTextColor));
      font-style: var(--fdInputGroup_Input_Placeholder_Style, italic);
    }

    @include fd-hover() {
      @include fd-input-field-nested-reset(--fdInputGroup_Hover_Input_Background);
    }

    @include fd-focus() {
      outline: none;
      box-shadow: none;
      background: var(--fdInputGroup_Input_Background, none);
      border-radius: 0;
    }

    &:nth-child(1) {
      padding-inline-start: $fd-input-padding;
    }

    &:nth-last-child(1) {
      padding-inline-end: $fd-input-padding;
    }

    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus,
    &:-webkit-autofill:active {
        background-clip: text;
    }
  }

  &--inline {
    display: inline-flex;
    vertical-align: bottom;
    width: auto;
  }

  &__addon {
    @include fd-reset();
    @include fd-flex-center();
    @include fd-ellipsis();

    color: var(--sapContent_NonInteractiveIconColor);
    background: var(--fdInputGroup_Addon_Background, none);
    font-size: var(--sapFontLargeSize);
    min-width: var(--fdInput_Group_Addon_Width, 2.25rem);
    min-height: var(--fdInput_Group_Addon_Height, var(--fdInput_Compact_Height));
    padding-inline: 0.625rem;

    span[class*='sap-icon--'] {
      &::before {
        font-size: var(--sapFontLargeSize);
      }
    }

    &--readonly {
      opacity: 0.4;
    }

    &--button {
      padding-block: 0;
      padding-inline: 0;
      overflow: visible;
    }
  }

  &--control {
    &[aria-expanded="true"] {
      margin-block-end: 0;
    }
  }

  @include fd-compact-or-condensed() {
    height: var(--sapElement_Compact_Height);

    --fdInput_Field_Margin: 0.1875rem 0;
    --fdInput_Field_Compact_Margin: 0;
    --fdInput_Group_Addon_Width: 2rem;
    --fdInput_Group_Addon_Height: var(--fdInput_Compact_Height);
  }

  .#{$fd-namespace}-textarea {
    resize: vertical;
  }

  * {
    // since input-group applies disabled styles, inner elements should not be additionally dimmed
    @include fd-disabled() {
      opacity: 1;
    }
  }

  &[readonly],
  &.is-readonly {
    overflow: visible;
  }

  .#{$fd-namespace}-tokenizer {
    @include fd-input-field-nested-reset();

    @include fd-hover () {
      @include fd-input-field-nested-reset();
    }

    @include fd-focus () {
      @include fd-input-field-nested-reset();

      outline: none;
    }
  }
}
