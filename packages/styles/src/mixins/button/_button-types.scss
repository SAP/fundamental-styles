@use "sass:map";

@import "../../functions";

$default-button-config: (
  "default": (
    "borderColor": var(--sapButton_BorderColor),
    "color": var(--sapButton_TextColor),
    "background": var(--sapButton_Background),
  ),
  "hover": (
    "color": var(--sapButton_Hover_TextColor),
    "borderColor": var(--sapButton_Hover_BorderColor),
    "background": var(--sapButton_Hover_Background),
  ),
  "active": (
    "color": var(--sapButton_Active_TextColor),
    "borderColor": var(--sapButton_Active_BorderColor),
    "background": var(--sapButton_Active_Background)
  ),
  "toggled": (
    "color": var(--sapButton_Selected_TextColor),
    "borderColor": var(--sapButton_Selected_BorderColor),
    "background": var(--sapButton_Selected_Background)
  ),
  "activeToggled": (
    "color": var(--sapButton_Selected_TextColor),
    "borderColor": var(--sapButton_Selected_Hover_BorderColor),
    "background": var(--sapButton_Selected_Hover_Background)
  )
);

$button-types-config: (
  "emphasized": (
    "default": map.merge(
      map.get($default-button-config, "default"),
      (
        "fontWeight": var(--sapButton_Emphasized_FontWeight),
        "borderWidth": var(--fdButton_Emphasized_Border_Width),
        "borderColor": var(--sapButton_Emphasized_BorderColor),
        "color": var(--sapButton_Emphasized_TextColor),
        "background": var(--sapButton_Emphasized_Background),
      )
    ),
    "hover": map.merge(
      map.get($default-button-config, "hover"),
      (
        "color": var(--sapButton_Emphasized_Hover_TextColor),
        "borderColor": var(--sapButton_Emphasized_Hover_BorderColor),
        "background": var(--sapButton_Emphasized_Hover_Background),
      )
    ),
    "active": map.merge(
      map.get($default-button-config, "active"),
      (
        "color": var(--sapButton_Emphasized_Active_TextColor),
        "borderColor": var(--sapButton_Emphasized_Active_BorderColor),
        "background": var(--sapButton_Emphasized_Active_Background)
      )
    ),
    "toggled": map.get($default-button-config, "toggled"),
    "activeToggled": map.get($default-button-config, "activeToggled")
  ),
  "attention": (
    "default": map.merge(
      map.get($default-button-config, "default"),
      (
        "borderColor": var(--sapButton_Attention_BorderColor),
        "color": var(--sapButton_Attention_TextColor),
        "background": var(--sapButton_Attention_Background),
      )
    ),
    "hover": map.merge(
      map.get($default-button-config, "hover"),
      (
        "color": var(--sapButton_Attention_Hover_TextColor),
        "borderColor": var(--sapButton_Attention_Hover_BorderColor),
        "background": var(--sapButton_Attention_Hover_Background),
      )
    ),
    "active": map.merge(
      map.get($default-button-config, "active"),
      (
        "color": var(--sapButton_Attention_Active_TextColor),
        "borderColor": var(--sapButton_Attention_Active_BorderColor),
        "background": var(--sapButton_Attention_Active_Background)
      )
    ),
    "toggled": map.merge(
      map.get($default-button-config, "toggled"),
      (
        "color": var(--sapButton_Attention_Selected_TextColor),
        "borderColor": var(--sapButton_Attention_Selected_BorderColor),
        "background": var(--sapButton_Attention_Selected_Background)
      )
    ),
    "activeToggled": map.merge(
      map.get($default-button-config, "activeToggled"),
      (
        "color": var(--sapButton_Attention_Selected_TextColor),
        "borderColor": var(--sapButton_Attention_Selected_Hover_BorderColor),
        "background": var(--sapButton_Attention_Selected_Hover_Background)
      )
    )
  ),
  "negative": (
    "default": map.merge(
      map.get($default-button-config, "default"),
      (
        "color": var(--sapButton_Reject_TextColor),
        "borderColor": var(--sapButton_Reject_BorderColor),
        "background": var(--sapButton_Reject_Background)
      )
    ),
    "hover": map.merge(
      map.get($default-button-config, "hover"),
      (
        "color": var(--sapButton_Reject_Hover_TextColor),
        "borderColor": var(--sapButton_Reject_Hover_BorderColor),
        "background": var(--sapButton_Reject_Hover_Background)
      )
    ),
    "active": map.merge(
      map.get($default-button-config, "active"),
      (
        "color": var(--sapButton_Reject_Active_TextColor),
        "borderColor": var(--sapButton_Reject_Active_BorderColor),
        "background": var(--sapButton_Reject_Active_Background)
      )
    ),
    "toggled": map.merge(
      map.get($default-button-config, "toggled"),
      (
        "color": var(--sapButton_Reject_Selected_TextColor),
        "borderColor": var(--sapButton_Reject_Selected_BorderColor),
        "background": var(--sapButton_Reject_Selected_Background)
      )
    ),
    "activeToggled": map.merge(
      map.get($default-button-config, "activeToggled"),
      (
        "color": var(--sapButton_Reject_Selected_TextColor),
        "borderColor": var(--sapButton_Reject_Selected_Hover_BorderColor),
        "background": var(--sapButton_Reject_Selected_Hover_Background)
      )
    )
  ),
  "positive": (
    "default": map.merge(
      map.get($default-button-config, "default"),
      (
        "color": var(--sapButton_Accept_TextColor),
        "borderColor": var(--sapButton_Accept_BorderColor),
        "background": var(--sapButton_Accept_Background)
      )
    ),
    "hover": map.merge(
      map.get($default-button-config, "hover"),
      (
        "color": var(--sapButton_Accept_Hover_TextColor),
        "borderColor": var(--sapButton_Accept_Hover_BorderColor),
        "background": var(--sapButton_Accept_Hover_Background)
      )
    ),
    "active": map.merge(
      map.get($default-button-config, "active"),
      (
        "color": var(--sapButton_Accept_Active_TextColor),
        "borderColor": var(--sapButton_Accept_Active_BorderColor),
        "background": var(--sapButton_Accept_Active_Background),
      )
    ),
    "toggled": map.merge(
      map.get($default-button-config, "toggled"),
      (
        "color": var(--sapButton_Accept_Selected_TextColor),
        "borderColor": var(--sapButton_Accept_Selected_BorderColor),
        "background": var(--sapButton_Accept_Selected_Background)
      )
    ),
    "activeToggled": map.merge(
      map.get($default-button-config, "activeToggled"),
      (
        "color": var(--sapButton_Accept_Selected_TextColor),
        "borderColor": var(--sapButton_Accept_Selected_Hover_BorderColor),
        "background": var(--sapButton_Accept_Selected_Hover_Background)
      )
    )
  ),
  "transparent": (
    "default": map.merge(
      map.get($default-button-config, "default"),
      (
        "color": var(--sapButton_Lite_TextColor),
        "borderColor": var(--sapButton_Lite_BorderColor),
        "background": var(--sapButton_Lite_Background)
      )
    ),
    "hover": map.merge(
      map.get($default-button-config, "hover"),
      (
        "color": var(--sapButton_Lite_Hover_TextColor),
        "borderColor": var(--sapButton_Lite_Hover_BorderColor),
        "background": var(--sapButton_Lite_Hover_Background)
      )
    ),
    "active": map.merge(
      map.get($default-button-config, "active"),
      (
        "borderColor": var(--sapButton_Lite_Active_BorderColor),
        "background": var(--sapButton_Lite_Active_Background)
      )
    ),
    "toggled": map.get($default-button-config, "toggled"),
    "activeToggled": map.get($default-button-config, "activeToggled")
  ),
  "ghost": (
    "default": map.merge(
      map.get($default-button-config, "default"),
      (
        "background": var(--fdButton_Ghost_Background)
      )
    ),
    "hover": map.get($default-button-config, "hover"),
    "active": map.get($default-button-config, "active"),
    "toggled": map.get($default-button-config, "toggled"),
    "activeToggled": map.get($default-button-config, "activeToggled")
  )
);

@mixin fd-button-types() {
  /* Default type */
  @include _fd-button-type($default-button-config);

  @each $type, $props in $button-types-config {
    &--#{$type} {
      @include _fd-button-type($props);

      @if $type == "emphasized" {
        font-weight: var(--sapButton_Emphasized_FontWeight);
        border-width: var(--fdButton_Emphasized_Border_Width);

        @include fd-focus() {
          &::after {
            border-color: var(--sapContent_ContrastFocusColor);
          }

          @include fd-active() {
            &::after {
              border-color: var(--sapContent_FocusColor);
            }
          }
        }

        @include fd-compact-or-condensed() {
          @include fd-focus() {
            @include fd-active() {
              &::after {
                border-color: transparent;
              }
            }
          }
        }

        // @deprecated selected state
        @include fd-button-active-selected() {
          outline: none;
        }

        &.#{$block-button-toggled} {
          @include fd-focus() {
            outline-color: var(--fdButton_Emphasized_Active_Outline);
          }

          // @deprecated selected state
          @include fd-button-active-selected() {
            outline: none;
          }
        }
      }
    }
  }
}

/* === INTERNAL FOR THIS FILE === */

@mixin _fd-button-type($props: $default-button-config) {
  $defaultText: map-deep-get($props, "default", "color");
  $defaultBorder: map-deep-get($props, "default", "borderColor");
  $defaultBackground: map-deep-get($props, "default", "background");
  $hoverText: map-deep-get($props, "hover", "color");
  $hoverBorder: map-deep-get($props, "hover", "borderColor");
  $hoverBackground: map-deep-get($props, "hover", "background");
  $activeText: map-deep-get($props, "active", "color");
  $activeBorder: map-deep-get($props, "active", "borderColor");
  $activeBackground: map-deep-get($props, "active", "background");
  $toggledText: map-deep-get($props, "toggled", "color");
  $toggledBorder: map-deep-get($props, "toggled", "borderColor");
  $toggledBackground: map-deep-get($props, "toggled", "background");
  $toggledActiveText: map-deep-get($props, "activeToggled", "color");
  $toggledActiveBorder: map-deep-get($props, "activeToggled", "borderColor");
  $toggledActiveBackground: map-deep-get($props, "activeToggled", "background");

  @include _fd-button-apply-colors($defaultText, $defaultBorder, $defaultBackground);

  color: var(--fdButtonColor);
  border-color: var(--fdButtonBorderColor);
  background-color: var(--fdButtonBackgroundColor);

  // @deprecated, toggled state should be used instead
  @include fd-selected() {
    @include _fd-button-apply-colors(
      $toggledText,
      $toggledBorder,
      $toggledBackground,
      --fdButtonSelectedPrioritizedBorderColor,
      --fdButtonSelectedPrioritizedBackgroundColor
    );
  }

  @include fd-hover() {
    @include _fd-button-apply-colors(
      $hoverText,
      $hoverBorder,
      $hoverBackground,
      --fdButtonHoverPrioritizedBorderColor,
      --fdButtonHoverPrioritizedBackgroundColor
    );
  }

  @include fd-active() {
    @include _fd-button-apply-colors(
      $activeText,
      $activeBorder,
      $activeBackground,
      --fdButtonActivePrioritizedBorderColor,
      --fdButtonActivePrioritizedBackgroundColor,
      true
    );

    .#{$fd-namespace}-button__icon {
      color: $activeText;
      text-shadow: none;
    }
  }

  @include fd-disabled() {
    @include _fd-button-apply-colors($defaultText, $defaultBorder, $defaultBackground);

    // @deprecated, toggled state should be used instead
    @include fd-selected() {
      @include _fd-button-apply-colors($toggledText, $toggledBorder, $toggledBackground);
    }
  }

  &.#{$block-button-toggled} {
    @include _fd-button-apply-colors(
      $toggledText,
      $toggledBorder,
      $toggledBackground,
      --fdButtonToggledPrioritizedBorderColor,
      --fdButtonToggledPrioritizedBackgroundColor,
    );

    @include fd-hover() {
      @include _fd-button-apply-colors(
        $toggledActiveText,
        $toggledActiveBorder,
        $toggledActiveBackground,
        --fdButtonToggledActivePrioritizedBorderColor,
        --fdButtonToggledActivePrioritizedBackgroundColor,
      );
    }

    // @deprecated selected state
    @include fd-button-active-selected() {
      @include _fd-button-apply-colors($toggledActiveText, $toggledActiveBorder, $toggledActiveBackground, true);
      .#{$fd-namespace}-button__icon {
        color: $activeText;
        text-shadow: none;
      }
    }

    @include fd-disabled() {
      box-shadow: none;
    }
  }
}

@mixin _fd-button-apply-colors(
  $color,
  $borderColor,
  $backgroundColor,
  $priorityBorderColorVariable: --fdButtonPrioritizedBorderColor,
  $priorityBackgroundColorVariable: --fdButtonPrioritizedBackgroundColor,
  $changeInnerElementColor: false) {
  --fdButtonColor: #{$color};
  --fdButtonBorderColor: var(#{$priorityBorderColorVariable}, #{$borderColor});
  --fdButtonBackgroundColor: var(#{$priorityBackgroundColorVariable}, #{$backgroundColor});

  @if $changeInnerElementColor {
    // In case we have styled element inside button, we can change color of it here.
    --fdElementTextColor: #{$color};
    --fdElementIconColor: #{$color};
  }
}
