@use "sass:map";

@import "../mixins";

@mixin fd-table-nested-cell-padding($levels: 20, $content-density-cozy: false, $include-expand: false) {
  $level-padding: 0.5rem;
  $second-level-padding: 1.5rem;
  $third-level-padding: 0.75rem;
  $fourth-level-padding: 1.25rem;
  $expand-padding: if($include-expand, if($content-density-cozy, 2.75rem, 2rem), 0);

  @for $i from 1 through $levels {
    &[data-nesting-level='#{$i}'] {
      @if $i == 1 {
        padding-left: $expand-padding;

        @include fd-rtl() {
          padding-left: 0.5rem;
          padding-right: $expand-padding;
        }
      } @else if $i == 2 {
        padding-left: $second-level-padding + $expand-padding;

        @include fd-rtl() {
          padding-left: 0.5rem;
          padding-right: $second-level-padding + $expand-padding;
        }
      } @else if $i == 3 {
        padding-left: $second-level-padding + $third-level-padding + $expand-padding;

        @include fd-rtl() {
          padding-left: 0.5rem;
          padding-right: $second-level-padding + $third-level-padding + $expand-padding;
        }
      } @else if $i == 4 {
        padding-left: $second-level-padding + $fourth-level-padding + $expand-padding;

        @include fd-rtl() {
          padding-left: 0.5rem;
          padding-right: $second-level-padding + $fourth-level-padding + $expand-padding;
        }
      } @else {
        padding-left: $second-level-padding + $third-level-padding + (($i - 3) * $level-padding) + $expand-padding;

        @include fd-rtl() {
          padding-left: 0.5rem;
          padding-right: $second-level-padding + $third-level-padding + (($i - 3) * $level-padding) + $expand-padding;
        }
      }
    }
  }
}

@mixin fd-table-group-and-tree() {
  &--group {
    .#{$block}__cell--group {
      background-color: var(--fdTable_Group_Header_Background);
      font-weight: var(--fdTable_Header_Cell_Font_Weight);
      border-bottom-color: var(--sapList_TableGroupHeaderBorderColor);
    }
  }

  &--tree,
  &--group {
    .#{$block}__body {
      .#{$block}__cell {
        @include fd-table-nested-cell-padding(20, true, true);

        &--expand {
          cursor: pointer;
          white-space: nowrap;

          @include fd-table-nested-cell-padding(20, true);
        }

        .#{$block}__expand {
          min-width: var(--fdTable_Header_Cell_Height);
          height: var(--fdTable_Cell_Height);
          color: var(--sapContent_IconColor);
          font-size: var(--sapFontSmallSize);

          @include fd-inline-flex-center();
          @include fd-icon("navigation-right-arrow");

          @include fd-rtl() {
            @include fd-icon("navigation-left-arrow");

            &.#{$block}__expand--open {
              @include fd-icon("navigation-down-arrow");
            }
          }

          &--open {
            @include fd-icon("navigation-down-arrow");
          }
        }
      }
    }
  }

  @include fd-compact-or-condensed() {
    &.#{$block}--tree,
    &.#{$block}--group {
      .#{$block}__body {
        .#{$block}__cell {
          @include fd-table-nested-cell-padding(20, false, true);

          &--expand {
            @include fd-table-nested-cell-padding(20, false);
          }
        }
      }
    }
  }
}
