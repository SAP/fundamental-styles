@use "sass:map";
@use "sass:string";

@import "common-variables";

@mixin sap-reset {
  font-family: "72", "72full", Arial, Helvetica, sans-serif;
  font-size: var(--sapFontSize);
  line-height: normal;
  color: var(--sapTextColor);
  font-weight: normal;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  border: 0;
  text-indent: 0;
  list-style-type: none;

  &::before,
  &::after {
    box-sizing: inherit;
    font-size: inherit;
  }
}

@mixin sap-rtl {
  @at-root {
    [dir="rtl"] &,
    &[dir="rtl"] {
      @content;
    }
  }
}

@mixin sap-transition($property: all, $duration: 150ms, $animation: ease-in) {
  $fn-transition: $property $duration $animation;

  transition: $fn-transition;
}

/* States */
@mixin sap-hover {
  &:hover,
  &.is-hover {
    @content;
  }
}

@mixin sap-empty {
  &:empty,
  &.is-empty {
    @content;
  }
}

@mixin sap-pressed {
  &[aria-pressed="true"],
  &.is-pressed {
    @content;
  }
}

@mixin sap-readonly {
  &[aria-readonly="true"],
  &[readonly],
  &.is-readonly {
    @content;
  }
}

@mixin sap-selected {
  &[aria-selected="true"],
  &.is-selected {
    @content;
  }
}

@mixin sap-expanded {
  &[aria-expanded="true"] {
    @content;
  }
}

@mixin sap-active {
  &:active,
  &.is-active {
    @content;
  }
}

@mixin sap-focus-active {
  &:focus:active,
  &.is-focus.is-active {
    @content;
  }
}

@mixin sap-disabled {
  &[aria-disabled="true"],
  &:disabled,
  &.is-disabled {
    @content;
  }
}

@mixin sap-focus() {
  &:focus,
  &.is-focus {
    @content;
  }
}

@mixin sap-is-focus() {
  &.is-focus {
    @content;
  }
}

@mixin sap-not-focus-visible() {
  &:focus:not(.focus-visible) {
    @content;
  }
}

@mixin sap-focus-visible() {
  &.focus-visible,
  &.is-focus {
    @content;
  }
}

@mixin sap-focus-within() {
  &:focus-within,
  &.is-focus-within {
    @content;
  }
}

/*
@Todo Remove after visual testing

@mixin sap-display() {
  &.is-display {
    @content;
  }
}
 */

/* Flex Helpers */
@mixin sap-flex($direction: row) {
  display: flex;
  flex-direction: $direction;
  @content;
}

@mixin sap-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin sap-flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
  @content;
}

@mixin sap-flex-vertical-center {
  display: flex;
  align-items: center;
  @content;
}

/* Set Paddings */
@mixin sap-set-padding-left($left: 0) {
  padding-left: $left;

  @include sap-rtl() {
    padding-right: $left;
    padding-left: 0;
  }
}

@mixin sap-set-padding-right($right: 0) {
  padding-right: $right;

  @include sap-rtl() {
    padding-right: 0;
    padding-left: $right;
  }
}

@mixin sap-set-paddings-x($left: 0, $right: 0) {
  padding-left: $left;
  padding-right: $right;

  @include sap-rtl() {
    padding-right: $left;
    padding-left: $right;
  }
}

@mixin sap-set-paddings-x-equal($value: 0) {
  padding-left: $value;
  padding-right: $value;
}

@mixin sap-set-paddings-y($top: 0, $bottom: 0) {
  padding-top: $top;
  padding-bottom: $bottom;
}

@mixin sap-set-paddings-y-equal($value: 0) {
  padding-top: $value;
  padding-bottom: $value;
}

/* Set position absolute */
@mixin sap-set-position-right($right) {
  right: $right;

  @include sap-rtl() {
    right: auto;
    left: $right;
  }
}

@mixin sap-set-position-left($left) {
  left: $left;

  @include sap-rtl() {
    left: auto;
    right: $left;
  }
}

@mixin sap-user-select() {
  user-select: none;
}

@mixin sap-set-top-right-bottom-left($top:0, $right:0, $bottom:0, $left:0) {
  position: absolute;
  inset: $top $right $bottom $left;

  @include sap-rtl() {
    left: $right;
    right: $left;
  }
}

@mixin sap-set-square($size) {
  width: $size;
  height: $size;
}

@mixin sap-set-square-min-width($size) {
  width: $size;
  height: $size;
  min-width: $size;
  min-height: $size;
}

@mixin sap-set-rectangle($width, $height) {
  width: $width;
  height: $height;
}

/* Display mixins */
@mixin sap-display($type: inline) {
  display: $type !important;

  @content;
}

/* Position mixins */
@mixin sap-position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  inset: $top $right $bottom $left;

  @content;
}

@mixin sap-position-absolute($args...) {
  @include sap-position(absolute, $args...);
}

@mixin sap-position-relative($args...) {
  @include sap-position(relative, $args...);
}

@mixin sap-position-fixed($args...) {
  @include sap-position(fixed, $args...);
}

@mixin sap-position-sticky($args...) {
  @include sap-position(sticky, $args...);
}

@mixin sap-position-absolute-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  @content;
}

@mixin sap-position-absolute-center-x() {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);

  @content;
}

@mixin sap-position-absolute-center-y() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);

  @content;
}

/* Border-radius */
@mixin sap-set-border-radius($value...) {
  $_value: $value;

  @if  map.has-key($sap-corner-border-radius, #{$value}) {
    $_value: map.get($sap-corner-border-radius, #{$value});
  }

  border-radius: $_value;

  @content;
}

@mixin sap-flex-align-content($type: normal, $direction: row) {
  @include sap-flex($direction) {
    flex-wrap: wrap;
    align-content: $type;
  }

  @content;
}

@mixin sap-flex-align-items($type: stretch, $direction: row) {
  @include sap-flex($direction) {
    align-items: $type;
  }

  @content;
}

@mixin sap-flex-gap($value, $type: "", $direction: row) {
  @include sap-flex($direction);

  $_value: "";

  @if $value == "tiny" {
    $_value: map.get($sap-flex-spacings, "tiny");
  } @else if $value == "small" {
    $_value: map.get($sap-flex-spacings, "small");
  } @else if $value == "medium" {
    $_value: map.get($sap-flex-spacings, "medium");
  } @else if $value == large {
    $_value: map.get($sap-flex-spacings, "large");
  } @else {
    $_value: $value;
  }

  @if $type == "" {
    gap: $_value;
  } @else {
    #{$type}-gap: $_value;
  }

  @content;
}

@mixin sap-flex-justify($type: flex-start, $direction: row) {
  @include sap-flex($direction) {
    justify-content: $type;
  }

  @content;
}

@mixin sap-flex-wrap($type: nowrap, $direction: row) {
  @include sap-flex($direction) {
    flex-wrap: $type;
  }

  @content;
}

@mixin sap-flex-order($value: 0) {
  order: $value;

  @content;
}

@mixin sap-flex-grow($value) {
  flex-grow: $value;

  @content;
}

@mixin sap-flex-shrink($value) {
  flex-shrink: $value;

  @content;
}

@mixin sap-flex-align-self($value) {
  align-self: $value;

  @content;
}

@mixin sap-flex-child($value) {
  flex: $value;

  @content;
}

/* Margins */
@mixin sap-set-margin-all($value: 0) {
  margin: $value;
}

@mixin sap-set-margin-top($value: 0) {
  margin-top: $value;
}

@mixin sap-set-margin-bottom($value: 0) {
  margin-bottom: $value;
}

@mixin sap-set-margin-begin($value: 0) {
  margin-left: $value;

  @include sap-rtl() {
    margin-left: 0;
    margin-right: $value;
  }
}

@mixin sap-set-margin-end($value: 0) {
  margin-right: $value;

  @include sap-rtl() {
    margin-right: 0;
    margin-left: $value;
  }
}

@mixin sap-set-margin-x-equal($value: 0) {
  margin-right: $value;
  margin-left: $value;
}

@mixin sap-set-margin-y-equal($value: 0) {
  margin-top: $value;
  margin-bottom: $value;
}

@mixin sap-set-margin-x($valueLeft: 0, $valueRight: 0) {
  margin-left: $valueLeft;
  margin-right: $valueRight;

  @include sap-rtl() {
    margin-left: $valueRight;
    margin-right: $valueLeft;
  }
}

@mixin sap-set-margin-right($right: 0) {
  margin-right: $right;

  @include sap-rtl() {
    margin-right: 0;
    margin-left: $right;
  }
}

@mixin sap-set-margin-y($valueTop: 0, $valueBottom: 0) {
  margin-top: $valueTop;
  margin-bottom: $valueBottom;
}

@mixin sap-set-equal-positions($value) {
  inset: $value $value $value $value;
}

@mixin sap-margin($value, $side: '') {
  $_value: $value !important;

  @if  map.has-key($sap-margins, #{$value}) {
    $_value: map.get($sap-margins, #{$value}) !important;
  }

  @if  $side != '' {
    @if  $side == top {
      @include sap-set-margin-top($_value);
    } @else if $side == bottom {
      @include sap-set-margin-bottom($_value);
    } @else if $side == begin {
      @include sap-set-margin-begin($_value);
    } @else if $side == end {
      @include sap-set-margin-end($_value);
    } @else if $side == x {
      @include sap-set-margin-x-equal($_value);
    } @else if $side == y {
      @include sap-set-margin-y-equal($_value);
    }
  } @else {
    @include sap-set-margin-all($_value);
  }
}

@mixin sap-margin-responsive() {
  @include sap-media-sm() {
    margin: 0 0 1rem !important;
  }

  @include sap-media-md() {
    margin: 1rem !important;
  }

  @include sap-media-lg() {
    margin: 1rem 2rem !important;
  }

  @include sap-media-xl() {
    margin: 1rem 3rem !important;
  }
}

/* Media queries */
@mixin sap-media-sm() {
  @media (max-width: #{$small - $offset}) {
    @content;
  }
}

@mixin sap-media-md() {
  @media (min-width: #{$small}) and (max-width: #{$medium - $offset}) {
    @content;
  }
}

@mixin sap-media-lg() {
  @media (min-width: #{$medium}) and (max-width: #{$large - $offset}) {
    @content;
  }
}

@mixin sap-media-xl() {
  @media (min-width: #{$large}) {
    @content;
  }
}

@mixin sap-media-min-width($width) {
  @media (min-width: $width) {
    @content;
  }
}

@mixin sap-media-max-width($width) {
  @media (max-width: $width) {
    @content;
  }
}

@mixin sap-media-range-width($minWidth, $maxWidth) {
  @media (min-width: $minWidth) and (max-width: $maxWidth) {
    @content;
  }
}

@mixin sap-media-print() {
  @media print {
    @content;
  }
}

@mixin sap-media-orientation($orientation) {
  @media (orientation: $orientation) {
    @content;
  }
}

@mixin sap-media-from($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

@mixin sap-media-until($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

/* Container Queries */
@mixin sap-container-type($type: normal) {
  container-type: $type;
  @content;
}

@mixin sap-container-query-from($width) {
  @container (min-width: $width) {
    @content;
  }
}

@mixin sap-container-query-until($width) {
  @container (max-width: $width) {
    @content;
  }
}

@mixin sap-container-query-sm() {
  @container (max-width: 599px) {
    @content;
  }
}

@mixin sap-container-query-md() {
  @container (600px <= width <= 1023px) {
    @content;
  }
}

@mixin sap-container-query-lg() {
  @container (1024px <= width <= 1439px) {
    @content;
  }
}

@mixin sap-container-query-xl() {
  @container (min-width: 1440px) {
    @content;
  }
}

/* Paddings */
@mixin sap-set-padding-all($value: 0) {
  padding: $value;
}

@mixin sap-set-padding-top($value: 0) {
  padding-top: $value;
}

@mixin sap-set-padding-bottom($value: 0) {
  padding-bottom: $value;
}

@mixin sap-set-padding-begin($value: 0) {
  padding-left: $value;

  @include sap-rtl() {
    padding-left: 0;
    padding-right: $value;
  }
}

@mixin sap-set-padding-end($value: 0) {
  padding-right: $value;

  @include sap-rtl() {
    padding-right: 0;
    padding-left: $value;
  }
}

@mixin sap-set-padding-x-equal($value: 0) {
  padding-right: $value;
  padding-left: $value;
}

@mixin sap-set-padding-y-equal($value: 0) {
  padding-top: $value;
  padding-bottom: $value;
}

@mixin sap-set-padding-x($valueLeft: 0, $valueRight: 0) {
  padding-left: $valueLeft;
  padding-right: $valueRight;

  @include sap-rtl() {
    padding-left: $valueRight;
    padding-right: $valueLeft;
  }
}

@mixin sap-set-padding-y($valueTop: 0, $valueBottom: 0) {
  padding-top: $valueTop;
  padding-bottom: $valueBottom;
}

@mixin sap-padding($value: 1rem, $side: '') {
  $_value: $value !important;

  @if  map.has-key($sap-paddings, #{$value}) {
    $_value: map.get($sap-paddings, #{$value}) !important;
  }

  @if  $side != '' {
    @if  $side == top {
      @include sap-set-padding-top($_value);
    } @else if $side == bottom {
      @include sap-set-padding-bottom($_value);
    } @else if $side == begin {
      @include sap-set-padding-begin($_value);
    } @else if $side == end {
      @include sap-set-padding-end($_value);
    } @else if $side == x {
      @include sap-set-padding-x-equal($_value);
    } @else if $side == y {
      @include sap-set-padding-y-equal($_value);
    }
  } @else {
    @include sap-set-padding-all($_value);
  }
}

@mixin sap-padding-responsive() {
  @include sap-media-sm() {
    @include sap-padding(small, x);
    @include sap-padding(0, y);
  }

  @include sap-media-md() {
    @include sap-padding(medium, x);
    @include sap-padding(0, y);
  }

  @include sap-media-lg() {
    @include sap-padding(medium, x);
    @include sap-padding(0, y);
  }

  @include sap-media-xl() {
    @include sap-padding(large, x);
    @include sap-padding(0, y);
  }
}

@mixin sap-padding-container-responsive() {
  @include sap-container-query-sm() {
    @include sap-padding(small, x);
    @include sap-padding(0, y);
  }

  @include sap-container-query-md() {
    @include sap-padding(medium, x);
    @include sap-padding(0, y);
  }

  @include sap-container-query-lg() {
    @include sap-padding(medium, x);
    @include sap-padding(0, y);
  }

  @include sap-container-query-xl() {
    @include sap-padding(large, x);
    @include sap-padding(0, y);
  }
}

/* Content paddings */
@mixin sap-set-content-paddings($type, $value) {
  @if  $type == 'home' {
    padding-left: map.get($sap-content-paddings-home, $value) !important;
    padding-right: map.get($sap-content-paddings-home, $value) !important;
  } @else if $type == 'container' {
    padding-left: map.get($sap-content-paddings-container, $value) !important;
    padding-right: map.get($sap-content-paddings-container, $value) !important;
  } @else {
    padding-left: map.get($sap-content-paddings-nav, $value) !important;
    padding-right: map.get($sap-content-paddings-nav, $value) !important;
  }
}

@mixin sap-set-dynamic-content-paddings($type) {
  @include sap-container-query-sm() {
    @include sap-set-content-paddings($type, 'sm');
  }

  @include sap-container-query-md() {
    @include sap-set-content-paddings($type, 'md');
  }

  @include sap-container-query-lg() {
    @include sap-set-content-paddings($type, 'lg');
  }

  @include sap-container-query-xl() {
    @include sap-set-content-paddings($type, 'xl');
  }
}

@mixin sap-content-paddings($type: home, $size: default) {
  @if  $size == default {
    @include sap-set-dynamic-content-paddings($type);
  } @else {
    @include sap-set-content-paddings($type, $size);
  }
}

/* Shadows */
@mixin sap-set-box-shadow($value) {
  box-shadow: $value;
}

@mixin sap-set-text-shadow($value) {
  text-shadow: $value;
}

@mixin sap-shadow($type) {
  @if  map.has-key($sap-box-shadow-types , #{$type} ) {
    @include sap-set-box-shadow(map.get($sap-box-shadow-types, #{$type}));
  } @else if map.has-key($sap-text-shadow-types , #{$type} ) {
    @include sap-set-text-shadow(map.get($sap-text-shadow-types, #{$type}));
  } @else {
    @warn "Unknown type of shadow";
  }
}

@mixin sap-sr-only() {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  width: 1px;
  border: 0;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  white-space: nowrap;

  @content;
}

/* Font-family */
@mixin sap-font-family($type) {
  @if  $type == "regular" {
    font-family: map.get($sap-font-types, "regular");
  } @else if $type == "light" {
    font-family: map.get($sap-font-types, "light");
  } @else if $type == "bold" {
    font-family: map.get($sap-font-types, "bold");
  } @else if $type == "semibold" {
    font-family: map.get($sap-font-types, "semibold");
  } @else if $type == "semibold-duplex" {
    font-family: map.get($sap-font-types, "semibold-duplex");
  } @else if $type == "monospaced-regular" {
    font-family: map.get($sap-font-types, "monospaced-regular");
  } @else if $type == "monospaced-bold" {
    font-family: map.get($sap-font-types, "monospaced-bold");
  } @else if $type == "black" {
    font-family: map.get($sap-font-types, "black");
  } @else if $type == "header" {
    font-family: map.get($sap-font-types, "header");
  } @else {
    font-family: $type;
  }
}

/* Font-size */
@mixin sap-font-size($size) {
  @if  $size == "header-6" {
    font-size: map.get($sap-font-sizes, "header-6");
  } @else if $size == "header-5" {
    font-size: map.get($sap-font-sizes, "header-5");
  } @else if $size == "header-4" {
    font-size: map.get($sap-font-sizes, "header-4");
  } @else if $size == "header-3" {
    font-size: map.get($sap-font-sizes, "header-3");
  } @else if $size == "header-2" {
    font-size: map.get($sap-font-sizes, "header-2");
  } @else if $size == "header-1" {
    font-size: map.get($sap-font-sizes, "header-1");
  } @else if $size == "small" {
    font-size: map.get($sap-font-sizes, "small");
  } @else if $size == "medium" {
    font-size: map.get($sap-font-sizes, "medium");
  } @else if $size == "large" {
    font-size: map.get($sap-font-sizes, "large");
  } @else {
    font-size: $size;
  }
}

/* Line-height */
@mixin sap-font-line-height($value: normal) {
  line-height: $value;
}

/* Common cases */
@mixin sap-font($type) {
  @if  $type == header-3 {
    font-family: var(--sapFontHeaderFamily);
    font-size: var(--sapFontHeader3Size);
    color: var(--sapGroup_TitleTextColor);
  } @else {
    font-family: var(--sapFontFamily);

    @if  $type == standard-text {
      font-size: var(--sapFontSize);
      color: var(--sapTextColor);
    } @else if $type == small-detail-text {
      font-size: var(--sapFontSmallSize);
      color: var(--sapContent_LabelColor);
    } @else if $type == standard-field-text {
      font-size: var(--sapFontSize);
      color: var(--sapField_TextColor);
    } @else {
      font-size: var(--sapFontSize);
      color: var(--sapContent_LabelColor);
    }
  }
  @content;
}

/* Border */
@mixin sap-border($width, $style, $color, $pos: all) {
  $_border: $width $style $color;

  @if  $pos == "top" {
    border-top: $_border;
  } @else if $pos == "bottom" {
    border-bottom: $_border;
  } @else if $pos == "left" {
    border-left: $_border;

    @include sap-rtl() {
      border-left: none;
      border-right: $_border;
    }
  } @else if $pos == "right" {
    border-right: $_border;

    @include sap-rtl() {
      border-left: $_border;
      border-right: none;
    }
  } @else if $pos == "x" {
    border-left: $_border;
    border-right: $_border;
  } @else if $pos == "y" {
    border-top: $_border;
    border-bottom: $_border;
  } @else if $pos == "all" {
    border: $_border;
  } @else {
    border: $_border;
  }
}

/* Focus */
@mixin sap-fiori-focus($offset: -0.1875rem, $alternative: false) {
  &:focus,
  &.is-focus {
    outline-offset: $offset;
    outline-width: var(--sapContent_FocusWidth);
    outline-style: var(--sapContent_FocusStyle);

    @if $alternative == true {
      outline-color: var(--sapContent_ContrastFocusColor);
    } @else {
      outline-color: var(--sapContent_FocusColor);
    }

    @content;
  }
}

@mixin sap-fiori-focus-within($offset: -0.1875rem, $alternative: false) {
  &:focus-within,
  &.is-focus-within {
    outline-offset: $offset;
    outline-width: var(--sapContent_FocusWidth);
    outline-style: var(--sapContent_FocusStyle);

    @if $alternative == true {
      outline-color: var(--sapContent_ContrastFocusColor);
    } @else {
      outline-color: var(--sapContent_FocusColor);
    }

    @content;
  }
}

@mixin sap-fake-fiori-focus($offset: 0, $radius: 0, $alternative: false) {
  &:focus,
  &.is-focus {
    outline: none;
    position: relative;

    &::after {
      @if $alternative == true {
        border-color: var(--sapContent_ContrastFocusColor);
      } @else {
        border-color: var(--sapContent_FocusColor);
      }

      border-width: var(--sapContent_FocusWidth);
      border-style: var(--sapContent_FocusStyle);
      border-radius: $radius;
      content: '';
      position: absolute;
      pointer-events: none;
      inset: $offset $offset $offset $offset;
      @content;
    }
  }
}

@mixin sap-fake-fiori-focus-within($offset: 0, $radius: 0, $alternative: false) {
  &:focus-within,
  &.is-focus-within {
    outline: none;
    position: relative;

    &::after {
      @if $alternative == true {
        border-color: var(--sapContent_ContrastFocusColor);
      } @else {
        border-color: var(--sapContent_FocusColor);
      }

      border-width: var(--sapContent_FocusWidth);
      border-style: var(--sapContent_FocusStyle);
      border-radius: $radius;
      content: '';
      position: absolute;
      pointer-events: none;
      inset: $offset $offset $offset $offset;
      @content;
    }
  }
}

@mixin sap-elevation($index, $position: relative) {
  position: $position;
  z-index: $index;
}

@function capitalize($string) {
  @return string.to-upper-case(string.slice($string, 1, 1)) + string.slice($string, 2);
}

/**
 @todo Investigate why stylelint is not recognizing the functions
 */

/* stylelint-disable scss/function-no-unknown */
@mixin sap-color($color) {
  $colorVar: --sap + capitalize($color);

    color: var($colorVar);
}

  @mixin sap-bg-color($color) {
  $bgColorVar: --sap + capitalize($color);

  background-color: var($bgColorVar);
}
/* stylelint-enable scss/function-no-unknown */

@mixin sap-text($modifier: none) {
  @include sap-reset();

  &::selection {
    color: var(--sapContent_ContrastTextColor);
    background-color: var(--sapSelectedColor);
  }

  @if $modifier == 'max-lines' {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @if $modifier == 'pre-wrap' {
    white-space: pre-wrap;
  }

  @if $modifier == 'hyphenation' {
    hyphens: auto;
  }
}

@mixin sap-label($required: false, $colon: false) {
  @include sap-reset();
  @include sap-ellipsis();
  @include sap-set-margin-end(0.5rem);

  cursor: text;
  max-width: 100%;
  width: fit-content;
  position: relative;
  align-self: flex-start;
  font-size: var(--sapFontSize);
  color: var(--sapContent_LabelColor);

  &.is-disabled {
    opacity: 0.4;
  }

  @if $required == true {
    @include sap-set-padding-end(0.5rem);

    &::after {
      top: 0;
      right: 0;
      content: '*';
      font-weight: bold;
      position: absolute;
      font-size: var(--sapFontLargeSize);
      color: var(--sapField_RequiredColor);
    }

    @include sap-rtl() {
      &::after {
        left: 0;
        right: auto;
      }
    }
  }

  @if $colon == true {
    @include sap-set-padding-end(0.25rem);

    &::before {
      top: 0;
      right: 0;
      content: ':';
      color: inherit;
      position: absolute;
      font-size: var(--sapFontSize);
    }

    @include sap-rtl() {
      &::before {
        left: 0;
        right: auto;
      }
    }
  }

  @if $required == true and $colon == true {
    @include sap-set-padding-end(0.75rem);

    &::after {
      top: 0;
      right: 0;
      content: '*';
      font-weight: bold;
      position: absolute;
      font-size: var(--sapFontLargeSize);
      color: var(--sapField_RequiredColor);
    }

    &::before {
      top: 0;
      right: 0.5rem;
      content: ':';
      color: inherit;
      position: absolute;
      font-size: var(--sapFontSize);
    }

    @include sap-rtl() {
      &::before {
        right: auto;
        left: 0.5rem;
      }

      &::after {
        left: 0;
        right: auto;
      }
    }
  }
}

@mixin sap-heading-base() {
  @include sap-ellipsis();

  margin: 0;
  line-height: normal;
  color: var(--sapTextColor);
  font-size: var(--sapHeading_Font_Size);
  font-family: var(--sapFontHeaderFamily);
}

@mixin sap-heading($size) {
  @if $size == $sap-heading-h1 {
    @include sap-heading-base();

    --sapHeading_Font_Size: var(--sapFontHeader1Size);
  } @else if $size == $sap-heading-h2 {
    @include sap-heading-base();

    --sapHeading_Font_Size: var(--sapFontHeader2Size);
  } @else if $size == $sap-heading-h3 {
    @include sap-heading-base();

    --sapHeading_Font_Size: var(--sapFontHeader3Size);
  } @else if $size == $sap-heading-h4 {
    @include sap-heading-base();

    --sapHeading_Font_Size: var(--sapFontHeader4Size);
  } @else if $size == $sap-heading-h5 {
    @include sap-heading-base();

    --sapHeading_Font_Size: var(--sapFontHeader5Size);
  } @else if $size == $sap-heading-h6 {
    @include sap-heading-base();

    --sapHeading_Font_Size: var(--sapFontHeader6Size);
  } @else {
    @include sap-heading-base();

    --sapHeading_Font_Size: 1rem;
  }

  @content;
}
