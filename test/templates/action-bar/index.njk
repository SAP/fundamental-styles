{% extends "layout.njk" %}
{% from "./../format.njk" import format %}
{% from "./component.njk" import action_bar, action_bar_headlines %}
{% import "./../utils.njk" as utils %}

{% block content %}
    {%- macro render_txt_button() %}
        <div class="btn-playground">Button</div>
    {%- endmacro %}
    {%- macro render_icon_button() %}
        <div class="btn-playground"></div>
    {%- endmacro %}

    {%- set primarybtn %}{{render_txt_button()}}{%- endset %}

    {%- set contextmenu %}{{render_icon_button()}}{%- endset %}

    <!-- output the component example and the code snippet -->

    {% set example %}
    {{  action_bar(
        properties={
            title: "Action Bar with description and back button",
            description: data.properties.description,
            actions: {
                properties: {
                    items: [primarybtn,primarybtn]
                }
            },
            back_button: true
        },
        state={},
        aria={}
    )
}}
    {% endset %}
    {{ format(example) }}

    {% set example %}
    {{  action_bar(
        properties={
            title: "Action Bar with no description",
            actions: {
                properties: {
                    items: [primarybtn,primarybtn]
                }
            },
            back_button: true
        },
        state={},
        aria={}
    )
}}
    {% endset %}
    {{ format(example) }}

    {% set example3 %}
    {{  action_bar_headlines(
        properties={
            title: "Action Bar with header",
            description: "Description message lorem ipsum",
            actions: {
                properties: {
                    items: [primarybtn,primarybtn]
                }
            },
            back_button: true
        },
        aria={}
    )
}}
    {% endset %}
    {{ format(example3) }}

    {% set example %}
    {{  action_bar(
        properties={
            title: "Action Bar with no back button",
            actions: {
                properties: {
                    items: [primarybtn,primarybtn]
                }
            }
        },
        state={},
        aria={}
    )
}}
    {% endset %}
    {{ format(example) }}
    <br><br>

    <h2>Action bar on mobile screen (320px)</h2>
    {% set example %}
    <div style="width:319px">
        {{  action_bar(
        properties={
            title: "Action Bar with description and back button",
            actions: {
                properties: {
                    items: [contextmenu]
                }
            },
            back_button: true
        },
        state={},
        aria={}
    )
}}
    </div>
    {% endset %}
    {{ format(example) }}

    <h2>Actions Hidden</h2>
    <div id="toggles">
        <button type="button" id="button">Simulate dirty state</button>
        <br>
        <!-- output the component example and the code snippet -->
        {% set example %}
        {{  action_bar(
            properties={
                navigation: backbtn,
                title: data.properties.title,
                actions: {
                    properties: {
                        items: [primarybtn,primarybtn]
                    },
                    aria: {
                        hidden: true
                    }
                }
            },
            state={},
            aria={}
        )
    }}
        {% endset %}
        {{ format(example) }}
    </div>
    <script type="text/javascript">
        var button = document.getElementById("button");
        var toggles = document.getElementById("toggles");
        var actions = toggles.querySelectorAll(".fd-action-bar__actions");
        function doDirty() {
            for (var i = 0; i < actions.length; i++) {
                var item = actions[i];
                if (item.hasAttribute('aria-hidden')) {
                    item.setAttribute('aria-hidden', false);
                } else {
                    var classes = item.getAttribute("class");
                    classes.replace('is-disabled', '');
                    item.setAttribute("class", classes.replace('is-disabled', ''));
                }
            }
        }
        button.addEventListener('click', function () {
            doDirty();
        })
    </script>

{% endblock %}