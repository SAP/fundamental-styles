var i=Object.defineProperty,n=(n,e)=>i(n,"name",{value:e,configurable:!0});/* empty css                       *//* empty css                      */const e={title:"Components/Busy Indicator",parameters:{storySource:{source:'import \'../../../src/busy-indicator.scss\';\nimport \'../../../src/message-toast.scss\';\nexport default {\n    title: \'Components/Busy Indicator\',\n    parameters: {\n        description: `The busy indicator component informs the user about an ongoing operation. Only one busy indicator should be shown at a time.\n\n## Sizes\n\n| **Size** | &nbsp;&nbsp; **rem** &nbsp;&nbsp; | **Modifier class** |\n| :------- | :-------------------------------- | -----------------: |\n| Default  | &nbsp;&nbsp; 0.5 rem                | none               |\n| M        | &nbsp;&nbsp; 1 rem                | \\`--m\\`   |\n| L        | &nbsp;&nbsp; 2 rem                | \\`--l\\`   |\n\n##Usage\n**Use the busy indicator if:**\n\nThe ongoing operation only covers part of a screen that has multiple controls, and:\n\n- You need to display additional information, or\n- The user needs to be able to cancel the operation.\n\n\n**Do not use the busy indicator if:**\n\n- The operation takes less than one second.\n- You need to block the screen because the user is not supposed to start another operation. In this case, use the **Busy Dialog** component.\n        `,\n        tags: [\'f3\', \'a11y\', \'theme\']\n    }\n};\n\nexport const Standard = () => `<div style="text-align: center">\n    <div class="fd-busy-indicator fd-busy-indicator--l" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div><br /><br />\n    <div class="fd-busy-indicator fd-busy-indicator--m" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div><br /><br />\n    <div class="fd-busy-indicator" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div>\n    </div>\n`;\n\nStandard.parameters = {\n    docs: {\n        iframeHeight: 200,\n        description: {\n            story:\n            \'The standard busy indicator animates a sequence of cascading dots expanding and shrinking in a loop. The component comes in three sizes detailed above. To display the busy indicator, use the `fd-busy-indicator` class. If you want to display a certain size, add the modifier class of the desired size i.e. `--m` to the element.\'\n        }\n    }\n};\n\nexport const ContrastMode = () => `<div style="display:flex;justify-content:center;flex-direction:column;align-items:center;background-color:cadetblue;height:250px">\n<div class="fd-busy-indicator fd-busy-indicator--l fd-busy-indicator--contrast" aria-hidden="false" aria-label="Loading">\n    <div class="fd-busy-indicator__circle"></div>\n    <div class="fd-busy-indicator__circle"></div>\n    <div class="fd-busy-indicator__circle"></div>\n</div>\n</div>\n`;\n\nContrastMode.parameters = {\n    docs: {\n        iframeHeight: 200,\n        description: {\n            story:\n            \'The busy indicator also comes in contrast mode and displays white dots against a dark background. To apply contrast mode, add `contrast` into the element i.e. `fd-busy-indicator--m contrast`.\'\n        }\n    }\n};\n\nexport const ExtendedBusyIndicator = () => `<div class="fd-busy-indicator-extended">\n    <div class="fd-busy-indicator fd-busy-indicator--l" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div>\n    <div class="fd-busy-indicator-extended__label">loading data...</div>\n</div>`;\n\nExtendedBusyIndicator.parameters = {\n    docs: {\n        iframeHeight: 200,\n        description: {\n            story:\n            \'If more information needs to be displayed with the loading animation, it is replaced by the Extended Busy Indicator `fd-busy-indicator-extended`. The additional information is wrapped in an element with `fd-busy-indicator-extended__label` class.\'\n        }\n    }\n};\n\nexport const ExtendedBusyIndicatorInsideMessageToast = () => `\n<div class="fd-message-toast fd-busy-indicator-extended fd-busy-indicator-extended--message-toast">\n    <div class="fd-busy-indicator fd-busy-indicator--l" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div>\n    <div class="fd-busy-indicator-extended__label">loading data...</div>\n</div>`;\n\nExtendedBusyIndicatorInsideMessageToast.parameters = {\n    docs: {\n        iframeHeight: 200,\n        description: {\n            story:\n            \'At the Page level the Busy Indicator should always be placed in a container. The simplest form of container will be centred on the page and inherit the color values from Message Toast.\'\n        }\n    }\n};\n',locationsMap:{standard:{startLoc:{col:24,line:34},endLoc:{col:1,line:51},startBody:{col:24,line:34},endBody:{col:1,line:51}},"contrast-mode":{startLoc:{col:28,line:63},endLoc:{col:1,line:70},startBody:{col:28,line:63},endBody:{col:1,line:70}},"extended-busy-indicator":{startLoc:{col:37,line:82},endLoc:{col:7,line:89},startBody:{col:37,line:82},endBody:{col:7,line:89}},"extended-busy-indicator-inside-message-toast":{startLoc:{col:55,line:101},endLoc:{col:7,line:109},startBody:{col:55,line:101},endBody:{col:7,line:109}}}},description:"The busy indicator component informs the user about an ongoing operation. Only one busy indicator should be shown at a time.\n\n## Sizes\n\n| **Size** | &nbsp;&nbsp; **rem** &nbsp;&nbsp; | **Modifier class** |\n| :------- | :-------------------------------- | -----------------: |\n| Default  | &nbsp;&nbsp; 0.5 rem                | none               |\n| M        | &nbsp;&nbsp; 1 rem                | `--m`   |\n| L        | &nbsp;&nbsp; 2 rem                | `--l`   |\n\n##Usage\n**Use the busy indicator if:**\n\nThe ongoing operation only covers part of a screen that has multiple controls, and:\n\n- You need to display additional information, or\n- The user needs to be able to cancel the operation.\n\n\n**Do not use the busy indicator if:**\n\n- The operation takes less than one second.\n- You need to block the screen because the user is not supposed to start another operation. In this case, use the **Busy Dialog** component.\n        ",tags:["f3","a11y","theme"]}},d=n(()=>'<div style="text-align: center">\n    <div class="fd-busy-indicator fd-busy-indicator--l" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div><br /><br />\n    <div class="fd-busy-indicator fd-busy-indicator--m" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div><br /><br />\n    <div class="fd-busy-indicator" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div>\n    </div>\n',"Standard");d.parameters={docs:{iframeHeight:200,description:{story:"The standard busy indicator animates a sequence of cascading dots expanding and shrinking in a loop. The component comes in three sizes detailed above. To display the busy indicator, use the `fd-busy-indicator` class. If you want to display a certain size, add the modifier class of the desired size i.e. `--m` to the element."}}};const a=n(()=>'<div style="display:flex;justify-content:center;flex-direction:column;align-items:center;background-color:cadetblue;height:250px">\n<div class="fd-busy-indicator fd-busy-indicator--l fd-busy-indicator--contrast" aria-hidden="false" aria-label="Loading">\n    <div class="fd-busy-indicator__circle"></div>\n    <div class="fd-busy-indicator__circle"></div>\n    <div class="fd-busy-indicator__circle"></div>\n</div>\n</div>\n',"ContrastMode");a.parameters={docs:{iframeHeight:200,description:{story:"The busy indicator also comes in contrast mode and displays white dots against a dark background. To apply contrast mode, add `contrast` into the element i.e. `fd-busy-indicator--m contrast`."}}};const s=n(()=>'<div class="fd-busy-indicator-extended">\n    <div class="fd-busy-indicator fd-busy-indicator--l" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div>\n    <div class="fd-busy-indicator-extended__label">loading data...</div>\n</div>',"ExtendedBusyIndicator");s.parameters={docs:{iframeHeight:200,description:{story:"If more information needs to be displayed with the loading animation, it is replaced by the Extended Busy Indicator `fd-busy-indicator-extended`. The additional information is wrapped in an element with `fd-busy-indicator-extended__label` class."}}};const t=n(()=>'\n<div class="fd-message-toast fd-busy-indicator-extended fd-busy-indicator-extended--message-toast">\n    <div class="fd-busy-indicator fd-busy-indicator--l" aria-hidden="false" aria-label="Loading">\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n        <div class="fd-busy-indicator__circle"></div>\n    </div>\n    <div class="fd-busy-indicator-extended__label">loading data...</div>\n</div>',"ExtendedBusyIndicatorInsideMessageToast");t.parameters={docs:{iframeHeight:200,description:{story:"At the Page level the Busy Indicator should always be placed in a container. The simplest form of container will be centred on the page and inherit the color values from Message Toast."}}};const o=["Standard","ContrastMode","ExtendedBusyIndicator","ExtendedBusyIndicatorInsideMessageToast"];export{a as ContrastMode,s as ExtendedBusyIndicator,t as ExtendedBusyIndicatorInsideMessageToast,d as Standard,o as __namedExportsOrder,e as default};
