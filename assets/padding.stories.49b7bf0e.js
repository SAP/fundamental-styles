var d=Object.defineProperty,n=(n,e)=>d(n,"name",{value:e,configurable:!0});const e={title:"Padding",parameters:{storySource:{source:'import \'../../src/sap-padding.scss\';\nimport description from \'./padding.story.description.html?raw\';\n\nexport default {\n    title: \'Padding\',\n    parameters: {\n        description,\n        docs: { iframeHeight: 500 }\n    }\n};\n\nconst localStyles = `\n<style>\n    div.demo {\n        display: flex;\n        height: 4rem;\n        width: 8rem;\n        background: #69ADF8;\n    }\n    .demo div {\n        height: 100%;\n        width: 100%;\n        background: #E2EEFF;\n    }\n</style>\n`;\nexport const AllRoundPadding = () => `${localStyles}\n<div class="demo sap-padding">\n    <div></div>\n</div>\n`;\nAllRoundPadding.storyName = \'All-Round Padding\';\nAllRoundPadding.parameters = {\n    docs: {\n        iframeHeight: 500,\n        description: {\n            story: `All-round padding appear on all sides of the container they are applied to.<br>\n            <b>CSS class: </b> <code>.sap-padding</code><br>\n            <b>SCSS mixin: </b> <code>@include sap-padding();</code><br>\n            This will apply 1rem padding on all sides of the container.\n        `\n        }\n    }\n};\n\nexport const HorizontalPadding = () => `${localStyles}\n<h3>Tiny (0.5rem)</h3>\n<div class="demo sap-padding-x-tiny">\n    <div></div>\n</div>\n<br>\n<h3>Small (1rem)</h3>\n<div class="demo sap-padding-x-small">\n    <div></div>\n</div>\n<br>\n<h3>Medium (2rem)</h3>\n<div class="demo sap-padding-x-medium">\n    <div></div>\n</div>\n<br>\n<h3>Large (3rem)</h3>\n<div class="demo sap-padding-x-large">\n    <div></div>\n</div>\n<br>\n`;\nHorizontalPadding.storyName = \'Double Sided Padding\';\nHorizontalPadding.parameters = {\n    docs: {\n        iframeHeight: 500,\n        description: {\n            story: `Double sided paddings appear on two opposite sides of the element. The horizontal margins are displayed on left and right side of the element.\n            <table style="width: 100%; border-collapse: collapse; margin-top: 1rem;">\n                <tr>\n                    <th style="padding: 0.25rem;">Type</th>\n                    <th style="padding: 0.25rem;">Class</th>\n                    <th style="padding: 0.25rem;">Mixin</th>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Tiny (0.5rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-tiny</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(tiny, x)</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Small (1rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-small</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(small, x)</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Medium (2rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-medium</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(medium, x)</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Large (3rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-large</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(large, x)</td>\n                </tr>\n            </table>`\n        }\n    }\n};\n\nexport const ResponsivePadding = () => `${localStyles}\n<div class="demo sap-padding-responsive">\n    <div></div>\n</div>\n`;\nResponsivePadding.storyName = \'Responsive Paddings\';\nResponsivePadding.parameters = {\n    docs: {\n        iframeHeight: 500,\n        description: {\n            story: `The responsive padding class adds a double sided padding inside a container based on its width.<br>\n            <b>CSS Class: </b><code>.sap-padding-responsive</code><br>\n            <b>Mixin: </b><code>@include sap-padding-responsive()</code>\n            <table style="width: 100%; border-collapse: collapse; margin-top: 1rem;">\n                <tr>\n                    <th style="padding: 0.25rem;">Screen Size</th>\n                    <th style="padding: 0.25rem;">CSS</th>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">SM</td>\n                    <td style="padding: 0.25rem;">padding: 0 1rem !important;</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">MD</td>\n                    <td style="padding: 0.25rem;">padding: 0 2rem !important;</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">LG</td>\n                    <td style="padding: 0.25rem;">padding: 0 2rem !important;</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">XL</td>\n                    <td style="padding: 0.25rem;">padding: 0 3rem !important;</td>\n                </tr>\n            </table>`\n        }\n    }\n};\n\nexport const NoPadding = () => `${localStyles}\n<div class="demo sap-padding-none">\n    <div></div>\n</div>\n\n`;\n\nNoPadding.parameters = {\n    docs: {\n        iframeHeight: 500,\n        description: {\n            story: `No padding class removes existing container paddings. <br>\n            <b>CSS class: </b> <code>.sap-padding-none</code><br>\n            <b>SCSS mixin: </b> <code>@include sap-padding(0);</code><br>\n            `\n        }\n    }\n};\n',locationsMap:{"all-round-padding":{startLoc:{col:31,line:27},endLoc:{col:1,line:31},startBody:{col:31,line:27},endBody:{col:1,line:31}},"horizontal-padding":{startLoc:{col:33,line:46},endLoc:{col:1,line:67},startBody:{col:33,line:46},endBody:{col:1,line:67}},"responsive-padding":{startLoc:{col:33,line:105},endLoc:{col:1,line:109},startBody:{col:33,line:105},endBody:{col:1,line:109}},"no-padding":{startLoc:{col:25,line:144},endLoc:{col:1,line:149},startBody:{col:25,line:144},endBody:{col:1,line:149}}}},description:'The CSS padding properties are used to generate space around an element\'s content, inside of any defined borders. <br>\n<br>\n##Helper mixins:<br>\n<table style="width: 100%; border-collapse: collapse; margin-top: 1rem;">\n    <tr>\n        <th style="padding: 0.25rem 0.75rem;">Mixin</th>\n        <th style="padding: 0.25rem 0.75rem;">Resultant CSS</th>\n        <th style="padding: 0.25rem 0.75rem;">$value</th>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-all($value)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding: $value;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-top($value)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-top: $value;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-bottom($value)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-bottom: $value;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-begin($value)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-left: $value;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-end($value)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-right: $value;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-x-equal($value)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-right: $value; <br>padding-left: $value;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-y-equal($value)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-top: $value; <br>padding-bottom: $value;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-x($valueLeft, $valueRight)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-left: $valueLeft;<br>padding-right: $valueRight;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-set-padding-y($valueTop, $valueBottom)</td>\n        <td style="padding: 0.25rem 0.75rem;">padding-top: $valueTop;<br>padding-bottom: $valueBottom;</td>\n        <td style="padding: 0.25rem 0.75rem;">defined by the user</td>\n    </tr>\n    <tr>\n        <td style="padding: 0.25rem 0.75rem;">@include sap-padding($value, $side)</td>\n        <td style="padding: 0.25rem 0.75rem;">based on parameters</td>\n        <td style="padding: 0.25rem 0.75rem;">$value:tiny,small,<br> medium,large<br> or defined by the user <br> $side:\n            top, bottom, begin, end, x, y\n        </td>\n    </tr>\n</table>\n',docs:{iframeHeight:500}}},t="\n<style>\n    div.demo {\n        display: flex;\n        height: 4rem;\n        width: 8rem;\n        background: #69ADF8;\n    }\n    .demo div {\n        height: 100%;\n        width: 100%;\n        background: #E2EEFF;\n    }\n</style>\n",i=n(()=>t+'\n<div class="demo sap-padding">\n    <div></div>\n</div>\n',"AllRoundPadding");i.storyName="All-Round Padding",i.parameters={docs:{iframeHeight:500,description:{story:"All-round padding appear on all sides of the container they are applied to.<br>\n            <b>CSS class: </b> <code>.sap-padding</code><br>\n            <b>SCSS mixin: </b> <code>@include sap-padding();</code><br>\n            This will apply 1rem padding on all sides of the container.\n        "}}};const a=n(()=>t+'\n<h3>Tiny (0.5rem)</h3>\n<div class="demo sap-padding-x-tiny">\n    <div></div>\n</div>\n<br>\n<h3>Small (1rem)</h3>\n<div class="demo sap-padding-x-small">\n    <div></div>\n</div>\n<br>\n<h3>Medium (2rem)</h3>\n<div class="demo sap-padding-x-medium">\n    <div></div>\n</div>\n<br>\n<h3>Large (3rem)</h3>\n<div class="demo sap-padding-x-large">\n    <div></div>\n</div>\n<br>\n',"HorizontalPadding");a.storyName="Double Sided Padding",a.parameters={docs:{iframeHeight:500,description:{story:'Double sided paddings appear on two opposite sides of the element. The horizontal margins are displayed on left and right side of the element.\n            <table style="width: 100%; border-collapse: collapse; margin-top: 1rem;">\n                <tr>\n                    <th style="padding: 0.25rem;">Type</th>\n                    <th style="padding: 0.25rem;">Class</th>\n                    <th style="padding: 0.25rem;">Mixin</th>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Tiny (0.5rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-tiny</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(tiny, x)</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Small (1rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-small</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(small, x)</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Medium (2rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-medium</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(medium, x)</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">Large (3rem)</td>\n                    <td style="padding: 0.25rem;">.sap-padding-x-large</td>\n                    <td style="padding: 0.25rem;">@include sap-padding(large, x)</td>\n                </tr>\n            </table>'}}};const r=n(()=>t+'\n<div class="demo sap-padding-responsive">\n    <div></div>\n</div>\n',"ResponsivePadding");r.storyName="Responsive Paddings",r.parameters={docs:{iframeHeight:500,description:{story:'The responsive padding class adds a double sided padding inside a container based on its width.<br>\n            <b>CSS Class: </b><code>.sap-padding-responsive</code><br>\n            <b>Mixin: </b><code>@include sap-padding-responsive()</code>\n            <table style="width: 100%; border-collapse: collapse; margin-top: 1rem;">\n                <tr>\n                    <th style="padding: 0.25rem;">Screen Size</th>\n                    <th style="padding: 0.25rem;">CSS</th>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">SM</td>\n                    <td style="padding: 0.25rem;">padding: 0 1rem !important;</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">MD</td>\n                    <td style="padding: 0.25rem;">padding: 0 2rem !important;</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">LG</td>\n                    <td style="padding: 0.25rem;">padding: 0 2rem !important;</td>\n                </tr>\n                <tr>\n                    <td style="padding: 0.25rem;">XL</td>\n                    <td style="padding: 0.25rem;">padding: 0 3rem !important;</td>\n                </tr>\n            </table>'}}};const s=n(()=>t+'\n<div class="demo sap-padding-none">\n    <div></div>\n</div>\n\n',"NoPadding");s.parameters={docs:{iframeHeight:500,description:{story:"No padding class removes existing container paddings. <br>\n            <b>CSS class: </b> <code>.sap-padding-none</code><br>\n            <b>SCSS mixin: </b> <code>@include sap-padding(0);</code><br>\n            "}}};const l=["AllRoundPadding","HorizontalPadding","ResponsivePadding","NoPadding"];export{i as AllRoundPadding,a as HorizontalPadding,s as NoPadding,r as ResponsivePadding,l as __namedExportsOrder,e as default};
